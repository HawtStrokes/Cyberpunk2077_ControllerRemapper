#pragma once

#include <string>

namespace ControllerMapper
{
	namespace Bases
	{
		inline std::string GetBaseUM() {
			// Generated by makestringmc.exe
			return std::string(R"(<?xml version="1.0"?><bindings><!-- MAPPINGS --><mapping name="LeftX_Axis"type="Axis"><button id="IK_Pad_LeftAxisX"/><button id="IK_A"val="-1.0"overridableUI="left"/><button id="IK_D"val="1.0"overridableUI="right"/></mapping><mapping name="LeftY_Axis"type="Axis"><button id="IK_Pad_LeftAxisY"/><button id="IK_W"val="1.0"overridableUI="forward"/><button id="IK_S"val="-1.0"overridableUI="back"/></mapping><mapping name="CrawlingLeftY_Axis"type="Axis"><button id="IK_Pad_LeftAxisY"/><button id="IK_W"val="1.0"overridableUI="back"/></mapping><mapping name="RightX_Axis"type="Axis"><button id="IK_Pad_RightAxisX"/></mapping><mapping name="RightY_Axis"type="Axis"><button id="IK_Pad_RightAxisY"/></mapping><mapping name="UI_FakeCamera"type="Relative"><button id="IK_Pad_Fake_RelativeRightAxis"/><button id="IK_MouseX"/></mapping><mapping name="UI_MinigameFakeCamera"type="Relative"><button id="IK_Pad_Fake_RelativeLeftAxis"/><button id="IK_MouseX"/><button id="IK_MouseY"/></mapping><mapping name="UI_FakeMovement"type="Button"><button id="IK_Pad_Fake_LeftAxis"/><button id="IK_W"overridableUI="forward"/><button id="IK_S"overridableUI="back"/><button id="IK_A"overridableUI="left"/><button id="IK_D"overridableUI="right"/></mapping><mapping name="FreeCam_RightX_Axis"type="Axis"><button id="IK_Pad_RightAxisX"/><button id="IK_Right"val="1.0"/><button id="IK_Left"val="-1.0"/></mapping><mapping name="FreeCam_RightY_Axis"type="Axis"><button id="IK_Pad_RightAxisY"/><button id="IK_Up"val="1.0"/><button id="IK_Down"val="-1.0"/></mapping><mapping name="FreeCam_UpDown_Axis"type="Axis"><button id="IK_Q"val="-1.0"/><button id="IK_E"val="1.0"/><button id="IK_Space"val="1.0"/><button id="IK_Pad_B_CIRCLE")") +
				std::string(R"(val="-1.0"/><button id="IK_Pad_A_CROSS"val="1.0"/><button id="IK_Pad_LeftShoulder"val="-1.0"/><button id="IK_Pad_RightShoulder"val="1.0"/></mapping><mapping name="Acceleration_Axis"type="Axis"><button id="IK_Pad_RightTrigger"/><button id="IK_W"val="1.0"overridableUI="vehicleAccelerate"/><button id="IK_Up"val="1.0"overridableUI="vehicleAccelerate2"/></mapping><mapping name="Deceleration_Axis"type="Axis"><button id="IK_Pad_LeftTrigger"/><button id="IK_S"val="1.0"overridableUI="vehicleDecelrate"/><button id="IK_Down"val="1.0"overridableUI="vehicleDecelerate2"/></mapping><mapping name="Acceleration_Axis_Tank"type="Axis"><button id="IK_Pad_LeftAxisY"/><button id="IK_W"val="1.0"overridableUI="vehicleAccelerate"/><button id="IK_S"val="-1.0"overridableUI="vehicleDecelrate"/><button id="IK_Up"val="1.0"overridableUI="vehicleAccelerate2"/><button id="IK_Down"val="-1.0"overridableUI="vehicleDecelerate2"/></mapping><mapping name="SafeSpot_Button"type="Button"><button id="IK_Space"/><button id="IK_Pad_A_CROSS"/></mapping><mapping name="MouseX"type="Relative"preset="relative"><button id="IK_MouseX"/></mapping><mapping name="MouseY"type="Relative"preset="invertRelative"><button id="IK_MouseY"/></mapping><mapping name="MouseLeft"type="Button"><button id="IK_LeftMouse"/></mapping><mapping name="MouseWheel"type="Relative"preset="relative"><button id="IK_MouseZ"/></mapping><mapping name="MouseWheelUp"type="Button"><button id="IK_MouseWheelUp"/></mapping><mapping name="MouseWheelDown"type="Button"><button id="IK_MouseWheelDown"/></mapping><mapping name="Forward_Button"type="Button"><button id="IK_W"overridableUI="forward"/></mapping><mapping name="Right_Button"type="Button"><button id="IK_D"overridableUI="right"/></mapping><mapping name="Back_Button"type="Button"><button id="IK_S"overridableUI="back"/></mapping><mapping name="Left)") +
				std::string(R"(_Button"type="Button"><button id="IK_A"overridableUI="left"/></mapping><mapping name="QuestLeft"type="Axis"><button id="IK_Pad_LeftAxisX"/><button id="IK_A"val="-1.0"overridableUI="left"/></mapping><!-- PANELS --><mapping name="CharacterPanel_Button"type="Button"><button id="IK_C"/></mapping><mapping name="Inventory_Button"type="Button"><button id="IK_I"/><button id="IK_Pad_Back_Select"/></mapping><mapping name="PhoneReject_Button"type="Button"><button id="IK_T"/><button id="IK_Pad_DigitDown"/></mapping><mapping name="popup_action"type="Button"SIEJADependent="true"><button id="IK_Space"/><button id="IK_Pad_A_CROSS"/></mapping><mapping name="popup_goto"type="Button"><button id="IK_Tab"/><button id="IK_Pad_X_SQUARE"/></mapping><mapping name="popup_goto_messenger"type="Button"><button id="IK_Tab"/><button id="IK_Pad_LeftThumb"/></mapping><mapping name="popup_maxQuantity"type="Button"><button id="IK_E"/><button id="IK_Pad_DigitUp"/></mapping><mapping name="popup_halveQuantity"type="Button"><button id="IK_Q"/><button id="IK_Pad_DigitDown"/></mapping><mapping name="OpenChatBox_Button"type="Button"><button id="IK_T"/></mapping><mapping name="EnterChat_Button"type="Button"><button id="IK_Enter"/></mapping><!-- UI FULLSCREEN MENU TOGGLES --><mapping name="OpenPauseMenu_Button"type="Button"><button id="IK_Pad_Back_Select"/><button id="IK_PS4_OPTIONS"/><button id="IK_Escape"/></mapping><mapping name="TogglePauseMenu_Button"type="Button"><button id="IK_Pad_Back_Select"/><button id="IK_PS4_OPTIONS"/></mapping><mapping name="OpenHubMenu_Button"type="Button"><button id="IK_H"overridableUI="hub"/><button id="IK_Pad_Start"/><button id="IK_PS4_TOUCH_PRESS"/></mapping><mapping name="OpenMapMenu_Button"type="Button"><button id="IK_M"overridableUI="map"/><button id="IK_Pad_Start"/><button id="IK_PS4_TOUCH_PRESS"/)") +
				std::string(R"(></mapping><mapping name="OpenJournalMenu_Button"type="Button"><button id="IK_J"overridableUI="journal"/></mapping><mapping name="OpenPerksMenu_Button"type="Button"><button id="IK_P"overridableUI="perks"/></mapping><mapping name="OpenCraftingMenu_Button"type="Button"><button id="IK_K"overridableUI="crafting"/></mapping><mapping name="OpenInventoryMenu_Button"type="Button"><button id="IK_I"overridableUI="inventory"/></mapping><!-- QUICK SAVE --><mapping name="QuickSave_Button"type="Button"><button id="IK_F5"overridableUI="quickSave"/></mapping><!-- QUICK LOAD --><mapping name="QuickLoad_Button"type="Button"><button id="IK_F9"overridableUI="quickLoad"/></mapping><!-- UI KEYBOARD MAPPING --><mapping name="Keyboard_1"type="Button"><button id="IK_1"/></mapping><mapping name="Keyboard_2"type="Button"><button id="IK_2"/></mapping><mapping name="Keyboard_3"type="Button"><button id="IK_3"/></mapping><mapping name="Keyboard_4"type="Button"><button id="IK_4"/></mapping><mapping name="Keyboard_5"type="Button"><button id="IK_5"/></mapping><mapping name="Keyboard_6"type="Button"><button id="IK_6"/></mapping><mapping name="Keyboard_7"type="Button"><button id="IK_7"/></mapping><mapping name="Keyboard_8"type="Button"><button id="IK_8"/></mapping><mapping name="Keyboard_9"type="Button"><button id="IK_9"/></mapping><mapping name="Keyboard_0"type="Button"><button id="IK_0"/></mapping><!-- Controller specific dodge --><!-- Keyboard specific dodge --><mapping name="DodgeForward_Button"type="Button"><button id="IK_W"overridableUI="forward"/></mapping><mapping name="DodgeRight_Button"type="Button"><button id="IK_D"overridableUI="right"/></mapping><mapping name="DodgeBack_Button"type="Button"><button id="IK_S"overridableUI="back"/></mapping><mapping name="DodgeLeft_Button"type="Button"><button id="IK_A"overridableUI="left"/></mapping><mapping name="ToggleWalk_Button"type="Button"><butt)") +
				std::string(R"(on id="IK_G"overridableUI="walkToggle"/></mapping><mapping name="LeanLeft_Button"type="Button"><button id="IK_Q"/><button id="IK_Pad_DigitLeft"/></mapping><mapping name="LeanRight_Button"type="Button"><button id="IK_E"/><button id="IK_Pad_DigitRight"/></mapping><mapping name="LeanToggle_Button"type="Button"><button id="IK_Pad_LeftThumb"/></mapping><mapping name="Lean_Axis"type="Axis"><button id="IK_Pad_LeftAxisX"/></mapping><!-- ITEMS --><mapping name="Hit_Button"type="Button"><button id="IK_Pad_RightTrigger"thresholdPress="0.5"thresholdRelease="0.55"/><!-- threshold range < -1.0; 1.0 >, threshold pairs should be both positive/negative --><button id="IK_LeftMouse"/></mapping><mapping name="Hit2_Button"type="Button"><button id="IK_Pad_LeftTrigger"thresholdPress="0.1"thresholdRelease="0.05"/><!-- threshold range < -1.0; 1.0 >, threshold pairs should be both positive/negative --><button id="IK_RightMouse"overridableUI="aim"/></mapping><mapping name="RangedAttack_Button"type="Button"><button id="IK_Pad_RightTrigger"thresholdPress="0.5"thresholdRelease="0.55"/><!-- threshold range < -1.0; 1.0 >, threshold pairs should be both positive/negative --><button id="IK_LeftMouse"overridableUI="attack"/></mapping><mapping name="RangedADS_Button"type="Button"><button id="IK_Pad_LeftTrigger"thresholdPress="0.1"thresholdRelease="0.05"/><!-- threshold range < -1.0; 1.0 >, threshold pairs should be both positive/negative --><button id="IK_RightMouse"overridableUI="aim"/></mapping><mapping name="MeleeAttack_Button"type="Button"><button id="IK_LeftMouse"overridableUI="attack"/><button id="IK_Pad_RightTrigger"thresholdPress="0.2"thresholdRelease="0.55"/></mapping><mapping name="MeleeBlock_Button"type="Button"><button id="IK_Pad_LeftTrigger"thresholdPress="0.01"thresholdRelease="0.05"/><button id="IK_RightMouse"overridableUI="aim"/></mapping><mapping na)") +
				std::string(R"(me="NextWeapon_Button"type="Button"><button id="IK_MouseWheelUp"overridableUI="nextWeapon"/></mapping><mapping name="CycleTriggerMode_Button"type="Button"><button id="IK_Pad_DigitUp"/></mapping><mapping name="CancelCharging_Button"type="Button"><button id="IK_Pad_Y_TRIANGLE"/><button id="IK_R"overridableUI="cancelCharge"/></mapping><mapping name="ZoomIn_Button"type="Button"><button id="IK_Pad_DigitUp"/><button id="IK_MouseWheelUp"overridableUI="zoomIn"/></mapping><mapping name="ZoomOut_Button"type="Button"><button id="IK_Pad_DigitDown"/><button id="IK_MouseWheelDown"overridableUI="zoomOut"/></mapping><mapping name="BraindancePause_Button"type="Button"><button id="IK_Pad_X_SQUARE"/><button id="IK_Space"overridableUI="braindancePause"/></mapping><mapping name="BraindancePlayForward_Button"type="Button"><button id="IK_Pad_RightTrigger"thresholdPress="0.1"thresholdRelease="0.05"/><button id="IK_E"overridableUI="braindanceForward"/></mapping><mapping name="BraindancePlayBackward_Button"type="Button"><button id="IK_Pad_LeftTrigger"thresholdPress="0.1"thresholdRelease="0.05"/><button id="IK_Q"overridableUI="braindanceBackward"/></mapping><mapping name="BraindanceRestart_Button"type="Button"><button id="IK_Pad_Y_TRIANGLE"/><button id="IK_R"overridableUI="braindanceRestart"/></mapping><mapping name="BraindanceSwitchLayer_Button"type="Button"><button id="IK_Pad_RightShoulder"/><button id="IK_LShift"overridableUI="braindanceLayer"/></mapping><mapping name="BraindanceCameraToggle_Button"type="Button"><button id="IK_Pad_LeftShoulder"/><button id="IK_Tab"overridableUI="braindanceMode"/></mapping><mapping name="ExitBraindance_Button"type="Button"SIEJADependent="true"><button id="IK_Pad_B_CIRCLE"/><button id="IK_X"overridableUI="braindanceExit"/></mapping><mapping name="VehicleInsideWheel_Button"type="Button"><button id="IK_Pad_RightShoulder"/><button id="IK_R"overridableUI="radio"/></mapping><mapping name="Weap)") +
				std::string(R"(onSlot1_Button"type="Button"><button id="IK_1"overridableUI="weapon1"/></mapping><mapping name="WeaponSlot2_Button"type="Button"><button id="IK_2"overridableUI="weapon2"/></mapping><mapping name="WeaponSlot3_Button"type="Button"><button id="IK_3"overridableUI="weapon3"/></mapping><mapping name="WeaponSlot4_Button"type="Button"><button id="IK_4"overridableUI="weapon4"/></mapping><mapping name="HolsterWeapon_Button"type="Button"><button id="IK_B"overridableUI="holsterWeapon"/></mapping><mapping name="OpenQuickHackPanel_Button"type="Button"><button id="IK_Pad_RightShoulder"/><button id="IK_F"overridableUI="selectChoice"/></mapping><mapping name="CloseQuickHackPanel"type="Button"SIEJADependent="true"><button id="IK_Escape"/><button id="IK_Backspace"/><button id="IK_Pad_RightShoulder"/><button id="IK_Pad_B_CIRCLE"/><button id="IK_V"/></mapping><mapping name="ApplyAndCloseQHackWidget"type="Button"><button id="IK_Pad_X_SQUARE"/><button id="IK_F"overridableUI="selectChoiceUI"/></mapping><mapping name="ApplyQHack"type="Button"><button id="IK_F"overridableUI="selectChoice"/><button id="IK_Pad_A_CROSS"/></mapping><mapping name="ToggleQHackDescription"type="Button"><button id="IK_Z"overridableUI="quickhackInfo"/><button id="IK_Pad_RightShoulder"/></mapping><mapping name="CycleObjectives_Button"type="Button"><button id="IK_Pad_DigitDown"/><button id="IK_Z"overridableUI="cycleObjectives"/></mapping><!-- PROTOTYPING --><mapping name="UI_DPadLeft"type="Button"><button id="IK_Pad_DigitLeft"/></mapping><mapping name="UI_DPadRight"type="Button"><button id="IK_Pad_DigitRight"/></mapping><mapping name="UI_DPadUp"type="Button"><button id="IK_Pad_DigitUp"/></mapping><mapping name="UI_DPadDown"type="Button"><button id="IK_Pad_DigitDown"/></mapping><mapping name="UI_DialogFocus"type="Button"><button id="IK_Pad_DigitDown"/><button id="IK_Pad_DigitUp"/><button id="IK_Up"overridableUI="sel)") +
				std::string(R"(ectUpSecondary"/><button id="IK_Down"overridableUI="selectDownSecondary"/></mapping><mapping name="UI_Esc_B_Circle"type="Button"SIEJADependent="true"><button id="IK_Escape"/><button id="IK_Pad_B_CIRCLE"/></mapping><mapping name="UI_A_Cross"type="Button"><button id="IK_Pad_A_CROSS"/></mapping><mapping name="UI_Y_Triangle"type="Button"><button id="IK_Pad_Y_TRIANGLE"/></mapping><!-- BODY CARRYING --><mapping name="PickUpBodyFromTakedown_Button"type="Button"><button id="IK_Pad_RightThumb"/><button id="IK_Q"overridableUI="dropCarriedObject"/></mapping><mapping name="BodyDrop_Button"type="Button"><button id="IK_Pad_X_SQUARE"/><button id="IK_Q"overridableUI="dropCarriedObject"/></mapping><!-- INSPECTIO --><mapping name="InspectionEnd"type="Button"><button id="IK_Pad_B_CIRCLE"/><button id="IK_E"/></mapping><mapping name="InspectionTake"type="Button"><button id="IK_Pad_X_SQUARE"/><button id="IK_T"/></mapping><mapping name="InspectionZoom"type="Axis"><button id="IK_Pad_LeftTrigger"/><button id="IK_RightMouse"val="1.0"/></mapping><!-- CYBERWARE --><mapping name="LeftShoulder_Button"type="Button"><button id="IK_Pad_LeftShoulder"/></mapping><mapping name="RightShoulder_Button"type="Button"><button id="IK_Pad_RightShoulder"/></mapping><!-- TAKEDOWN --><mapping name="Takedown_Button"type="Button"><button id="IK_Pad_X_SQUARE"/><button id="IK_F"overridableUI="selectChoice"/></mapping><!-- VEHICLES --><mapping name="LeftX_Axis_Vehicle"type="Axis"><button id="IK_Pad_LeftAxisX"/><button id="IK_Right"val="1.0"overridableUI="vehicleSteerRight2"/><button id="IK_Left"val="-1.0"overridableUI="vehicleSteerLeft2"/><button id="IK_D"val="1.0"overridableUI="vehicleSteerRight"/><button id="IK_A"val="-1.0"overridableUI="vehicleSteerLeft"/></mapping><mapping name="LeftY_Axis_Vehicle"type="Axis"><button id="IK_Pad_LeftAxisY"/><button id="IK_LShift"val="1.0"/><button id="IK_LControl")") +
				std::string(R"(val="-1.0"/></mapping><mapping name="LeftY_Axis_Vehicle_RockFB"type="Axis"><button id="IK_Pad_LeftAxisY"/><button id="IK_W"val="1.0"overridableUI="vehicleAccelerate"/><button id="IK_S"val="-1.0"overridableUI="vehicleDecelrate"/><button id="IK_LShift"val="1.0"/><button id="IK_LControl"val="-1.0"/></mapping><mapping name="VehicleCameraToggle"type="Button"><button id="IK_Pad_DigitRight"/><button id="IK_Q"overridableUI="vehicleToggleCam"/></mapping><mapping name="Enter_Combat"type="Button"><button id="IK_Pad_Y_TRIANGLE"/><button id="IK_B"/></mapping><mapping name="Vehicle_Horn"type="Button"><button id="IK_Pad_LeftThumb"/><button id="IK_E"overridableUI="vehicleHorn"/></mapping><mapping name="Vehicle_Shoot_Primary"type="Button"><button id="IK_Pad_RightTrigger"thresholdPress="0.5"thresholdRelease="0.55"/><button id="IK_LeftMouse"overridableUI="vehicleShootPrimary"/></mapping><mapping name="Vehicle_Shoot_Secondary"type="Button"><button id="IK_Pad_LeftTrigger"thresholdPress="0.5"thresholdRelease="0.55"/><button id="IK_RightMouse"overridableUI="vehicleShootSecondary"/></mapping><mapping name="Vehicle_Shoot_Tertiary"type="Button"><button id="IK_Pad_RightShoulder"/><button id="IK_LControl"overridableUI="vehicleShootTertiary"/></mapping><mapping name="Vehicle_CycleLights"type="Button"><button id="IK_Alt"val="1.0"overridableUI="vehicleLights"/><button id="IK_Pad_X_SQUARE"/></mapping><mapping name="VehicleDriverCombatRangedAttack_Button"type="Button"><button id="IK_Pad_RightShoulder"/><button id="IK_LeftMouse"overridableUI="vehicleWeaponAttack"/></mapping><mapping name="Vehicle_Handbrake"type="Button"><button id="IK_Pad_A_CROSS"/><button id="IK_Space"overridableUI="vehicleHandbrake"/></mapping><mapping name="ExitVehicle_Button"type="Button"><button id="IK_F"overridableUI="exitVehicle"/><button id="IK_Pad_B_CIRCLE"/></mapping><mapping name="VehicleCameraInverse_Button"type="Button"><button id="I)") +
				std::string(R"(K_Pad_RightThumb"/><button id="IK_MiddleMouse"overridableUI="vehicleInverseCam"/></mapping><!-- DEBUG --><mapping name="Debug_Kill"type="Button"><button id="IK_K"/></mapping><mapping name="Debug_KillAll"type="Button"><button id="IK_L"/></mapping><mapping name="TweakDBReload_Button"type="Button"><button id="IK_NumPad3"/></mapping><mapping name="SelectPuppet_Button"type="Button"><button id="IK_NumPad4"/></mapping><mapping name="SelectSoundDebug_Button"type="Button"><button id="IK_F7"/></mapping><mapping name="RaycastDistanceAndMaterial_Button"type="Button"><button id="IK_F6"/></mapping><mapping name="SelectPuppetAnimation_Button"type="Button"><button id="IK_F11"/></mapping><mapping name="SelectPuppetWorkspots_Button"type="Button"><button id="IK_NumPad2"/></mapping><mapping name="SendExitSignalWorkspots_Button"type="Button"><button id="IK_Semicolon"/></mapping><mapping name="SelfWorkspotDebugMode_Button"type="Button"><button id="IK_Alt"/></mapping><!-- Anim Button Groups --><buttonGroup id="IK_F11_Alt"><button id="IK_F11"/><button id="IK_Alt"/></buttonGroup><buttonGroup id="IK_F11_Shift"><button id="IK_F11"/><button id="IK_RShift"/></buttonGroup><mapping name="SelectPlayerAnimation_Button"type="Button"><button id="IK_F11_Alt"/></mapping><mapping name="SelectFacialAnimationDebugCamera_Button"type="Button"><button id="IK_F11_Shift"/></mapping><buttonGroup id="IK_1_LShift"timeWindow ="0.08f"><button id="IK_LShift"/><button id="IK_1"/></buttonGroup><buttonGroup id="IK_2_LShift"timeWindow ="0.08f"><button id="IK_LShift"/><button id="IK_2"/></buttonGroup><buttonGroup id="IK_3_LShift"timeWindow ="0.08f"><button id="IK_LShift"/><button id="IK_3"/></buttonGroup><mapping name="ApplyNPCLevelToPlayerRanged_Button"type="Button"><button id="IK_1_LShift"/></mapping><mapping name="ApplyNPCLevelToPlayerMelee_Button"type="Button"><butto)") +
				std::string(R"(n id="IK_2_LShift"/></mapping><mapping name="ApplyNPCLevelToPlayerNetrunner_Button"type="Button"><button id="IK_3_LShift"/></mapping><mapping name="ToggleFrameRecording_Button"type="Button"><button id="IK_NumPad1"/></mapping><mapping name="Debug_ModifyYAxis"type="Axis"><button id="IK_Pad_LeftAxisX"/><button id="IK_Up"val="1.0"/><button id="IK_Down"val="-1.0"/></mapping><mapping name="Debug_ToggleFocusMode"type="Button"><button id="IK_NumPad5"/></mapping><mapping name="Debug_ToggleScanMode"type="Button"><button id="IK_Pad_Y_TRIANGLE"/></mapping><mapping name="FastForward_Button"type="Button"><button id="IK_Home"/></mapping><mapping name="SceneFastForward_Button"type="Button"><button id="IK_Pad_B_CIRCLE"/><button id="IK_C"overridableUI="fastForward"/></mapping><mapping name="FastForward_Hold_Button"type="Button"><button id="IK_Pad_B_CIRCLE"/></mapping><mapping name="Debug_A"type="Button"><button id="IK_Pad_A_CROSS"/></mapping><mapping name="Debug_B"type="Button"><button id="IK_Pad_B_CIRCLE"/></mapping><mapping name="Debug_X"type="Button"><button id="IK_Pad_X_SQUARE"/></mapping><mapping name="Debug_Y"type="Button"><button id="IK_Pad_Y_TRIANGLE"/></mapping><mapping name="Debug_LeftThumb"type="Button"><button id="IK_Pad_LeftThumb"/></mapping><mapping name="Debug_RightThumb"type="Button"><button id="IK_Pad_RightThumb"/></mapping><mapping name="Debug_LeftTrigger"type="Button"><button id="IK_Pad_LeftTrigger"thresholdPress="0.1"thresholdRelease="0.05"/><!-- threshold range < -1.0; 1.0 >, threshold pairs should be both positive/negative --><button id="IK_RightMouse"/></mapping><mapping name="Debug_RightTrigger"type="Button"><button id="IK_Pad_RightTrigger"thresholdPress="0.5"thresholdRelease="0.55"/><!-- threshold range < -1.0; 1.0 >, threshold pairs should be both positive/negative --><button id="IK_Le)") +
				std::string(R"(ftMouse"/></mapping><mapping name="Debug_LeftShoulder"type="Button"><button id="IK_Pad_LeftShoulder"/></mapping><mapping name="Debug_RightShoulder"type="Button"><button id="IK_Pad_RightShoulder"/></mapping><mapping name="Debug_DPadLeft"type="Button"><button id="IK_Left"/><button id="IK_Pad_DigitLeft"/></mapping><mapping name="Debug_DPadRight"type="Button"><button id="IK_Right"/><button id="IK_Pad_DigitRight"/></mapping><mapping name="Debug_DPadUp"type="Button"><button id="IK_Up"/><button id="IK_Pad_DigitUp"/></mapping><mapping name="Debug_DPadDown"type="Button"><button id="IK_Down"/><button id="IK_Pad_DigitDown"/></mapping><!-- DEVICE ADVANCE INTERACTION --><mapping name="UI_MoveCursorVertically"type="Axis"><button id="IK_Pad_LeftAxisY"/><!-- <button id="IK_MouseX"/>Ł.SZ we needto solve that in the future. Those types are not comapatible--></mapping><mapping name="UI_MoveCursorHorizontally"type="Axis"><button id="IK_Pad_LeftAxisX"/><!-- <button id="IK_MouseY"/>Ł.SZ we needto solve that in the future. Those types are not comapatible--></mapping><mapping name="UI_ScrollVertically"type="Axis"><button id="IK_Pad_RightAxisY"/><!-- <button id="IK_MouseZ"/>Ł.SZ we needto solve that in the future. Those types are not comapatible--></mapping><!-- TEMP UI MAPPING --><mapping name="UI_LookX_Axis"type="Axis"><button id="IK_Pad_LeftAxisX"/><!-- <button id="IK_MouseX"/>L.SZ we needto solve that in the future. Those types are not comapatible--></mapping><mapping name="UI_LookY_Axis"type="Axis"><button id="IK_Pad_LeftAxisY"/><!-- <button id="IK_MouseY"/>L.SZ we needto solve that in the future. Those types are not comapatible--></mapping><mapping name="UI_MoveX_Axis"type="Axis"><button id="IK_Pad_RightAxisX"/></mapping><mapping name="UI_MoveY_Axis"type="Axis"><button id="IK_Pad_RightAxisY"/></mapping><mapping name="Open_Craft"type="Button"><button id="IK_P")") +
				std::string(R"(/></mapping><mapping name="Open_SubChar"type="Button"><button id="IK_J"/></mapping><mapping name="UI_MoveUp"type="Button"><button id="IK_Pad_DigitUp"/><button id="IK_Q"overridableUI="selectUp"/><button id="IK_MouseWheelUp"/><button id="IK_Up"overridableUI="selectUpSecondary"/></mapping><mapping name="UI_ContextHelp"type="Button"><button id="IK_Pad_LeftThumb"/><button id="IK_H"/></mapping><mapping name="UI_MoveDown"type="Button"><button id="IK_Pad_DigitDown"/><button id="IK_E"overridableUI="selectDown"/><button id="IK_MouseWheelDown"/><button id="IK_Down"overridableUI="selectDownSecondary"/></mapping><mapping name="UI_MoveLeft"type="Button"><button id="IK_Left"overridableUI="selectLeftSecondary"/><button id="IK_Pad_DigitLeft"/></mapping><mapping name="UI_MoveRight"type="Button"><button id="IK_Right"overridableUI="selectRightSecondary"/><button id="IK_Pad_DigitRight"/></mapping><mapping name="Dialog_LeftY_Axis"type="Axis"><button id="IK_Pad_LeftAxisY"/></mapping><mapping name="Choice3"type="Button"><button id="IK_1"overridableUI="choice3"/><button id="IK_Pad_A_CROSS"/></mapping><mapping name="Choice4"type="Button"><button id="IK_2"overridableUI="choice4"/><button id="IK_Pad_B_CIRCLE"/></mapping><mapping name="DialogConfirm"type="Button"><button id="IK_F"overridableUI="selectChoice"/><button id="IK_Enter"/><button id="IK_Pad_X_SQUARE"/></mapping><mapping name="Dialog_Choice_Up"type="Button"><button id="IK_Up"/><button id="IK_Pad_DigitUp"/><button id="IK_Q"overridableUI="selectUp"/></mapping><mapping name="Dialog_Choice_Down"type="Button"><button id="IK_Down"/><button id="IK_Pad_DigitDown"/><button id="IK_E"overridableUI="selectDown"/></mapping><mapping name="Apply_Button"type="Button"SIEJADependent="true"><button id="IK_F"overridableUI="selectChoice"/><button id="IK_Enter"/><button id="IK_Pad_X_SQUARE"/></mapping><)") +
				std::string(R"(mapping name="Cancel_Button"type="Button"SIEJADependent="true"><button id="IK_C"overridableUI="cancelSelection"/><button id="IK_Escape"/><button id="IK_Pad_B_CIRCLE"/></mapping><mapping name="Exit_Button"type="Button"SIEJADependent="true"><button id="IK_C"overridableUI="cancelSelection"/><button id="IK_Backspace"/><button id="IK_Pad_B_CIRCLE"/></mapping><mapping name="Looting_Item_Comparision_Cycling"type="Button"SIEJADependent="true"><button id="IK_B"/><button id="IK_Pad_B_CIRCLE"/></mapping><mapping name="ExitWheel_Button"type="Button"SIEJADependent="true"><button id="IK_Pad_B_CIRCLE"/><button id="IK_RightMouse"overridableUI="exitRadial"/></mapping><mapping name="SelectWheelItem_Button"type="Button"SIEJADependent="true"><button id="IK_Pad_A_CROSS"/><button id="IK_LeftMouse"overridableUI="selectInRadial"/></mapping><mapping name="NextItem_Button"type="Button"><button id="IK_Pad_DigitRight"/><button id="IK_E"overridableUI="selectDown"/></mapping><mapping name="PrevItem_Button"type="Button"><button id="IK_Pad_DigitLeft"/><button id="IK_Q"overridableUI="selectUp"/></mapping><mapping name="StopDeviceControl_Button"type="Button"><button id="IK_Pad_B_CIRCLE"/><button id="IK_C"overridableUI="stopDeviceControl"/><button id="IK_Backspace"/></mapping><mapping name="CycleNext_Button"type="Button"><button id="IK_Pad_DigitRight"/><button id="IK_3"overridableUI="nextItem"/></mapping><mapping name="CyclePrev_Button"type="Button"><button id="IK_Pad_DigitLeft"/><button id="IK_1"overridableUI="prevItem"/></mapping><mapping name="UI_CycleTrackedQuestEntry_Button"type="Button"><button id="IK_Pad_DigitDown"/></mapping><mapping name="UI_PrintDebug"type="Button"><button id="IK_P"/></mapping><mapping name="UI_Drop"type="Button"><button id="IK_D"/></mapping><mapping name="UI_Unequip"type="Button"><button id="IK_U")") +
				std::string(R"( /></mapping><!-- Minigame mapping --><mapping name="Minigame_MoveUp"type="Button"><button id="IK_Up"overridableUI="selectUpSecondary"/><button id="IK_Pad_DigitUp"/></mapping><mapping name="Minigame_MoveDown"type="Button"><button id="IK_Down"overridableUI="selectDownSecondary"/><button id="IK_Pad_DigitDown"/></mapping><mapping name="Minigame_MoveLeft"type="Button"><button id="IK_Left"overridableUI="selectLeftSecondary"/><button id="IK_Pad_DigitLeft"/></mapping><mapping name="Minigame_MoveRight"type="Button"><button id="IK_Right"overridableUI="selectRightSecondary"/><button id="IK_Pad_DigitRight"/></mapping><mapping name="Minigame_Action"type="Button"><button id="IK_Enter"/><button id="IK_Pad_X_SQUARE"/></mapping><mapping name="Minigame_Cancel"type="Button"SIEJADependent="true"><button id="IK_Escape"/><button id="IK_Pad_B_CIRCLE"/></mapping><!-- FREE CAMERA CUSTOMS --><buttonGroup id="LeftThumbAndStart"timeWindow="0.12f"><button id="IK_Pad_Start"/><button id="IK_Pad_LeftThumb"/></buttonGroup><buttonGroup id="LeftThumbAndOption"timeWindow="0.12f"><button id="IK_PS4_OPTIONS"/><button id="IK_Pad_LeftThumb"/></buttonGroup><mapping name="ActivateFreeCam"type="Button"><button id="IK_F3"/><button id="LeftThumbAndStart"/><button id="LeftThumbAndOption"/></mapping ><mapping name="FreeCam_Control"type="Button"><button id="IK_LControl"/></mapping ><mapping name="SwitchFreeCamControl"type="Button"><button id="IK_F4"/></mapping>><mapping name="CameraClipboardC"type="Button"><button id="IK_C"/></mapping><mapping name="CameraClipboardV"type="Button"><button id="IK_V"/></mapping><mapping name="CameraMultSpeed"type="Button"><button id="IK_LShift"/><button id="IK_Pad_RightTrigger"thresholdPress="0.5"thresholdRelease="0.55"/></mapping><mapping name="CameraReduceSpeed"type="Button"><button id="IK_Alt"/><button id="IK_Pad_LeftTrigger"thresholdPress="0.5"thresholdRelea)") +
				std::string(R"(se="0.55"/></mapping><mapping name="CameraToggleStep"type="Button"><button id="IK_T"/></mapping><mapping name="CameraResetPitch"type="Button"><button id="IK_Y"/></mapping><mapping name="CameraStepForward"type="Button"><button id="IK_W"/></mapping><mapping name="CameraStepBack"type="Button"><button id="IK_S"/></mapping><mapping name="CameraStepLeft"type="Button"><button id="IK_A"/></mapping><mapping name="CameraStepRight"type="Button"><button id="IK_D"/></mapping><mapping name="CameraStepUp"type="Button"><button id="IK_E"/></mapping><mapping name="CameraStepDown"type="Button"><button id="IK_Q"/></mapping><mapping name="FreeCam_FOV_Control"type="Button"><button id="IK_F"/></mapping><mapping name="CameraStepPitchUp"type="Button"><button id="IK_Up"/></mapping><mapping name="CameraStepPitchDown"type="Button"><button id="IK_Down"/></mapping><mapping name="CameraStepYawLeft"type="Button"><button id="IK_Left"/></mapping><mapping name="CameraStepYawRight"type="Button"><button id="IK_Right"/></mapping><mapping name="CameraIncreaseFOV"type="Button"><button id="IK_O"/></mapping><mapping name="CameraDecreaseFOV"type="Button"><button id="IK_P"/></mapping><mapping name="CameraDebugStepFrame"type="Axis"><button id="IK_NumPad9"val="1.0"/><button id="IK_NumPad8"val="-1.0"/></mapping><mapping name="CameraDebugStepTrack"type="Axis"><button id="IK_NumPad4"val="1.0"/><button id="IK_NumPad1"val="-1.0"/></mapping><mapping name="CameraDebugToggleRewindMode"type="Button"><button id="IK_NumPad7"/></mapping><mapping name="CameraDebugJumpToSelected"type="Button"><button id="IK_NumPad5"/></mapping><!-- UI --><mapping name="device_click"type="Button"SIEJADependent="true"><button id="IK_LeftMouse"/><button id="IK_Pad_X_SQUARE"/><button id="IK_F"overridableUI="s)") +
				std::string(R"(electChoiceUI"/></mapping><mapping name="back"type="Button"SIEJADependent="true"><button id="IK_Escape"/><button id="IK_Pad_B_CIRCLE"/></mapping><mapping name="system_notification_confirm"type="Button"SIEJADependent="true"><button id="IK_Pad_A_CROSS"/><button id="IK_Enter"/></mapping><mapping name="change_account"type="Button"SIEJADependent="true"><button id="IK_Pad_Y_TRIANGLE"/><button id="IK_C"/></mapping><mapping name="left_button"type="Button"SIEJADependent="true"><button id="IK_Pad_DigitLeft"/><button id="IK_Left"overridableUI="selectLeftSecondary"/></mapping><mapping name="up_button"type="Button"SIEJADependent="true"><button id="IK_Pad_DigitUp"/><button id="IK_Up"overridableUI="selectUpSecondary"/></mapping><mapping name="right_button"type="Button"SIEJADependent="true"><button id="IK_Pad_DigitRight"/><button id="IK_Right"overridableUI="selectRightSecondary"/></mapping><mapping name="down_button"type="Button"SIEJADependent="true"><button id="IK_Pad_DigitDown"/><button id="IK_Down"overridableUI="selectDownSecondary"/></mapping><mapping name="prior_menu"type="Button"SIEJADependent="true"><button id="IK_Pad_LeftShoulder"/><button id="IK_1"/></mapping><mapping name="next_menu"type="Button"SIEJADependent="true"><button id="IK_Pad_RightShoulder"/><button id="IK_3"/></mapping><mapping name="prior_sub_menu"type="Button"SIEJADependent="true"><button id="IK_Pad_LeftTrigger"thresholdPress="0.5"thresholdRelease="0.55"/><button id="IK_8"/></mapping><mapping name="next_sub_menu"type="Button"SIEJADependent="true"><button id="IK_Pad_RightTrigger"thresholdPress="0.5"thresholdRelease="0.55"/><button id="IK_9"/></mapping><mapping name="dpad_left"type="Button"SIEJADependent="true"><button id="IK_Pad_DigitLeft"/></mapping><mapping name="dpad_up"type="Button"SIEJADependent="true"><button id="IK_Pad_DigitUp"/><button id="IK_MouseWheelUp"/></mapping><mapping name="dpad_down"type="Button"SIEJADependent="true"><button id="IK_Pad_DigitDown"/><button id="IK_MouseWheelDown"/></mapping)") +
				std::string(R"(><mapping name="dpad_right"type="Button"SIEJADependent="true"><button id="IK_Pad_DigitRight"/></mapping><mapping name="left_stick_x"type="Axis"><button id="IK_Pad_LeftAxisX"/></mapping><mapping name="left_stick_y"type="Axis"><button id="IK_Pad_LeftAxisY"/></mapping><mapping name="right_stick_x"type="Axis"><button id="IK_Pad_RightAxisX"/><button id="IK_MouseWheelUp"val="1.0"/><button id="IK_MouseWheelDown"val="-1.0"/><!-- <button id="IK_MouseZ"/>--></mapping><mapping name="right_stick_y"type="Axis"><button id="IK_Pad_RightAxisY"/><button id="IK_MouseWheelUp"val="1.0"/><button id="IK_MouseWheelDown"val="-1.0"/><!-- <button id="IK_MouseZ"/>--></mapping><mapping name="left_trigger"type="Axis"><button id="IK_Pad_LeftTrigger"/></mapping><mapping name="right_trigger"type="Axis"><button id="IK_Pad_RightTrigger"/></mapping><mapping name="right_stick_y_scroll"type="Axis"><!-- <button id="IK_MouseZ"/>--><button id="IK_Pad_RightAxisY"/></mapping><mapping name="left_stick_y_scroll_up"type="Button"SIEJADependent="true"><button id="IK_Pad_LeftAxisY"thresholdPress="0.2"thresholdRelease="0.5"/></mapping><mapping name="left_stick_y_scroll_down"type="Button"SIEJADependent="true"><button id="IK_Pad_LeftAxisY"thresholdPress="-0.2"thresholdRelease="-0.5"/></mapping><!-- Vebdor --><mapping name="vendor_checkout"type="Button"SIEJADependent="true"><button id="IK_Pad_Y_TRIANGLE"/><button id="IK_F"overridableUI="selectChoiceUI"/></mapping><!-- Pause Menu --><mapping name="pause_menu_quicksave"type="Button"SIEJADependent="true"><button id="IK_Pad_Y_TRIANGLE"/><button id="IK_F5"overridableUI="quickSave"/></mapping><!-- InGame Settings --><mapping name="restore_default_settings"type="Button"SIEJADependent="true"><button id="IK_Pad_Y_TRIANGLE"/><button id="IK_F1"/></mapping><!-- World Map Menu --><mapping name="world_map_fake_move"type="Button"><button id="IK_Pad_LeftAxisX"/><button id="IK_LeftMouse"/></mapping><mapping name="world_map_fake_rotate"type="Button">)") +
				std::string(R"(   <button id="IK_Pad_RightAxisY"/><button id="IK_RightMouse"/></mapping><mapping name="world_map_menu_pan_mouse"type="Button"><button id="IK_LeftMouse"/></mapping><mapping name="world_map_menu_rotate_mouse"type="Button"><button id="IK_RightMouse"/></mapping><mapping name="world_map_menu_zoom_in_mouse"type="Button"><button id="IK_MouseWheelUp"/></mapping><mapping name="world_map_menu_zoom_out_mouse"type="Button"><button id="IK_MouseWheelDown"/></mapping><mapping name="world_map_menu_zoom_out"type="Axis"><button id="IK_Pad_LeftTrigger"/><button id="IK_MouseWheelUp"/></mapping><mapping name="world_map_menu_zoom_in"type="Axis"><button id="IK_Pad_RightTrigger"/><button id="IK_MouseWheelDown"/></mapping><mapping name="world_map_menu_fast_travel"type="Button"SIEJADependent="true"><button id="IK_Pad_A_CROSS"/><button id="IK_LeftMouse"/></mapping><mapping name="world_map_menu_track_waypoint"type="Button"SIEJADependent="true"><button id="IK_Pad_A_CROSS"/><button id="IK_RightMouse"/></mapping><mapping name="world_map_menu_open_quest_static"type="Button"SIEJADependent="true"><button id="IK_Pad_Y_TRIANGLE"/><button id="IK_J"/></mapping><mapping name="world_map_menu_zoom_to_mappin"type="Button"SIEJADependent="true"><button id="IK_Pad_RightThumb"/><button id="IK_MiddleMouse"/></mapping><mapping name="world_map_menu_open_quest"type="Button"SIEJADependent="true"><button id="IK_Pad_Y_TRIANGLE"/><button id="IK_F"overridableUI="selectChoiceUI"/></mapping><mapping name="world_map_menu_jump_to_player"type="Button"SIEJADependent="true"><button id="IK_Pad_LeftThumb"/><button id="IK_Tab"/></mapping><mapping name="world_map_menu_cycle_filter_prev"type="Button"SIEJADependent="true"><button id="IK_Pad_DigitLeft"/><button id="IK_Q"/></mapping><mapping name="world_map_menu_cycle_filter_next"type="Button"SIEJADependent="true"><button id="IK_Pad_DigitRight"/><button id="IK_E"/></mapping><mapping name="world_map_filter_navigation_up"type="Button"SIEJADependent="true"><button id="IK_P)") +
				std::string(R"(ad_DigitUp"/><button id="IK_Z"/></mapping><mapping name="world_map_filter_navigation_down"type="Button"SIEJADependent="true"><button id="IK_Pad_DigitDown"/><button id="IK_X"/></mapping><mapping name="world_map_menu_toggle_custom_filter"type="Button"SIEJADependent="true"><button id="IK_Pad_X_SQUARE"/><button id="IK_C"/></mapping><mapping name="world_map_menu_debug_teleport"type="Button"SIEJADependent="true"><button id="IK_Pad_X_SQUARE"/></mapping><mapping name="close_tutorial"type="Button"SIEJADependent="true"><button id="IK_C"/><button id="IK_Escape"/><button id="IK_Pad_A_CROSS"/></mapping><mapping name="proceed_popup"type="Button"SIEJADependent="true"><button id="IK_Pad_A_CROSS"/><button id="IK_F"overridableUI="selectChoiceUI"/><button id="IK_Enter"/></mapping><mapping name="cancel_popup"type="Button"SIEJADependent="true"><button id="IK_C"/><button id="IK_Escape"/><button id="IK_Pad_B_CIRCLE"/><button id="IK_RightMouse"/></mapping><mapping name="click_popup"type="Button"SIEJADependent="true"><button id="IK_LeftMouse"/><button id="IK_Pad_A_CROSS"/><button id="IK_Enter"/><button id="IK_F"overridableUI="selectChoiceUI"/></mapping><mapping name="menu_click"type="Button"SIEJADependent="true"><button id="IK_LeftMouse"/><button id="IK_Pad_A_CROSS"/><button id="IK_Enter"/><button id="IK_F"overridableUI="selectChoiceUI"/></mapping><mapping name="activate"type="Button"SIEJADependent="true"><button id="IK_LeftMouse"/><button id="IK_Pad_X_SQUARE"/></mapping><mapping name="activate_secondary"type="Button"SIEJADependent="true"><button id="IK_RightMouse"/><button id="IK_Pad_Y_TRIANGLE"/></mapping><mapping name="track"type="Button"SIEJADependent="true"><button id="IK_RightMouse"/><button id="IK_Pad_X_SQUARE"/></mapping><mapping name="delete_save"type="Button"SIEJADependent="true"><button id="IK_X"/><button id="IK_Pad_Y_TRIANGLE"/></mapping><mapping name="transfer_save"type="Button"SIEJADependent="true"><button id="IK_T"/><button id="IK_Pad_X_SQUARE"/></mapping><mapp)") +
				std::string(R"(ing name="disassemble_item"type="Button"SIEJADependent="true"><button id="IK_Pad_Y_TRIANGLE"/><button id="IK_Z"/></mapping><mapping name="craft_item"type="Button"SIEJADependent="true"><button id="IK_Pad_A_CROSS"/><button id="IK_LeftMouse"/></mapping><mapping name="drop_item"type="Button"SIEJADependent="true"><button id="IK_Pad_RightThumb"/><button id="IK_X"/></mapping><mapping name="equip_visuals"type="Button"SIEJADependent="true"><button id="IK_Pad_X_SQUARE"/><button id="IK_V"/></mapping><mapping name="equip_item"type="Button"SIEJADependent="true"><button id="IK_Pad_A_CROSS"/><button id="IK_Pad_X_SQUARE"/><button id="IK_LeftMouse"/></mapping><mapping name="unequip_item"type="Button"SIEJADependent="true"><button id="IK_Pad_Y_TRIANGLE"/><button id="IK_MiddleMouse"/></mapping><mapping name="delete_wardrobe_set"type="Button"SIEJADependent="true"><button id="IK_Pad_Y_TRIANGLE"/><button id="IK_Z"/></mapping><mapping name="preview_item"type="Button"SIEJADependent="true"><button id="IK_Pad_RightTrigger"thresholdPress="0.5"thresholdRelease="0.55"/><button id="IK_V"/></mapping><mapping name="toggle_comparison_tooltip"type="Button"SIEJADependent="true"><button id="IK_Pad_LeftThumb"/><button id="IK_Tab"/></mapping><mapping name="sell_junk"type="Button"><button id="IK_Pad_RightThumb"/><button id="IK_G"/></mapping><mapping name="use_item"type="Button"SIEJADependent="true"><button id="IK_Pad_A_CROSS"/><button id="IK_LeftMouse"/><button id="IK_F"overridableUI="selectChoiceUI"/></mapping><mapping name="upgrade_attribute"type="Button"SIEJADependent="true"><button id="IK_Pad_X_SQUARE"/><button id="IK_F"overridableUI="selectChoiceUI"/></mapping><mapping name="upgrade_perk"type="Button"SIEJADependent="true"><button id="IK_Pad_X_SQUARE"/><button id="IK_F"overridableUI="selectChoiceUI"/></mapping><mapping name="engagement_screen"type="Button"SIEJADependent="true"><button id="IK_Pad_Start"/><button id="IK_Space"/></mapping><mapping name="select"type="Button"SIEJADependent="true">)") +
				std::string(R"(   <button id="IK_Pad_A_CROSS"/><button id="IK_LeftMouse"/></mapping><mapping name="track_quest"type="Button"SIEJADependent="true"><button id="IK_Pad_Y_TRIANGLE"/><button id="IK_F"overridableUI="selectChoiceUI"/></mapping><mapping name="skip_loading"type="Button"SIEJADependent="true"><button id="IK_Space"/><button id="IK_Pad_B_CIRCLE"/></mapping><mapping name="option_switch_next"type="Button"SIEJADependent="true"><button id="IK_Pad_RightShoulder"/><button id="IK_D"/></mapping><mapping name="option_switch_prev"type="Button"SIEJADependent="true"><button id="IK_Pad_LeftShoulder"/><button id="IK_A"/></mapping><mapping name="option_switch_next_settings"type="Button"SIEJADependent="true"><button id="IK_Pad_DigitRight"/><button id="IK_D"/></mapping><mapping name="option_switch_prev_settings"type="Button"SIEJADependent="true"><button id="IK_Pad_DigitLeft"/><button id="IK_A"/></mapping><mapping name="brightness_settings"type="Button"SIEJADependent="true"><button id="IK_Pad_LeftThumb"/><button id="IK_Z"/></mapping><mapping name="controller_settings"type="Button"SIEJADependent="true"><button id="IK_Pad_RightThumb"/><button id="IK_X"/></mapping><mapping name="run_benchmark"type="Button"SIEJADependent="true"><button id="IK_Pad_X_SQUARE"/><button id="IK_B"/></mapping><mapping name="character_preview_rotate"type="Axis"><button id="IK_Q"val="1.0"overridableUI="selectUp"/><button id="IK_E"val="-1.0"overridableUI="selectDown"/></mapping><!-- PHOTO MODE CUSTOMS --><buttonGroup id="IK_PAD_LR_THUMB"timeWindow="0.2f"><button id="IK_Pad_LeftThumb"/><button id="IK_Pad_RightThumb"/></buttonGroup><mapping name="PhotoMode_MouseMove"type="Button"><button id="IK_LeftMouse"/></mapping><mapping name="PhotoMode_MouseRotation"type="Button"><button id="IK_RightMouse"/></mapping><mapping name="PhotoMode_MouseZoom"type="Button"><button id="IK_MiddleMouse"/></mapping><mapping name="TogglePhotoModeButton"type="B)") +
				std::string(R"(utton"><button id="IK_N"overridableUI="photoMode"/><button id="IK_PAD_LR_THUMB"/></mapping><mapping name="ExitPhotoModeButton"type="Button"SIEJADependent="true"><button id="IK_Escape"/><button id="IK_Pad_B_CIRCLE"/></mapping><mapping name="PhotoMode_ShowHideUI"type="Button"><button id="IK_Tab"/><button id="IK_Pad_RightThumb"/></mapping><mapping name="PhotoModeTakeScreenshot"type="Button"><button id="IK_F"overridableUI="selectChoice"/></mapping><mapping name="PhotoModeTakeScreenshot_HiRes"type="Button"><button id="IK_Space"/><button id="IK_Pad_X_SQUARE"/></mapping><mapping name="PhotoModeTakeScreenshot_HiRes_Stadia"type="Button"><button id="IK_CAPTURE"/></mapping><mapping name="PhotoMode_CraneDown_Axis"type="Axis"><button id="IK_Pad_LeftTrigger"/></mapping><mapping name="PhotoMode_CraneUp_Axis"type="Axis"><button id="IK_Pad_RightTrigger"/></mapping><mapping name="PhotoMode_Next_Menu"type="Button"><button id="IK_Pad_RightShoulder"/><button id="IK_E"overridableUI="selectDown"/></mapping><mapping name="PhotoMode_Prior_Menu"type="Button"><button id="IK_Pad_LeftShoulder"/><button id="IK_Q"overridableUI="selectUp"/></mapping><mapping name="PhotoMode_LoadSettings"type="Button"><button id="IK_Pad_Y_TRIANGLE"/><button id="IK_Backspace"/></mapping><mapping name="PhotoMode_SaveSettings"type="Button"SIEJADependent="true"><button id="IK_Pad_A_CROSS"/><button id="IK_Enter"/></mapping><mapping name="PhotoMode_Click"type="Button"SIEJADependent="true"><button id="IK_LeftMouse"/></mapping><!-- UI - ARCADE MINIGAMES --><mapping name="minigame_select"type="Button"SIEJADependent="true"><button id="IK_F"overridableUI="selectChoice"/><button id="IK_Enter"/><button id="IK_Pad_A_CROSS"/></mapping><mapping name="minigame_menu_up"type="Button"SIEJADependent="true"><button id="IK_Up"overridableUI="selectUpSecondary"/><button id="IK_W"/><button id="IK_Pad_DigitUp"/></mapping><mapping name="minigame_menu_down"typ)") +
				std::string(R"(e="Button"SIEJADependent="true"><button id="IK_Down"overridableUI="selectDownSecondary"/><button id="IK_S"/><button id="IK_Pad_DigitDown"/></mapping><mapping name="minigame_pause"type="Button"SIEJADependent="true"><button id="IK_Escape"overridableUI="cancelSelection"/><button id="IK_Pad_Y_TRIANGLE"/></mapping><mapping name="minigame_back"type="Button"SIEJADependent="true"><button id="IK_Backspace"overridableUI="cancelSelection"/><button id="IK_Pad_B_CIRCLE"/></mapping><mapping name="roach_race_jump"type="Button"SIEJADependent="true"><button id="IK_Up"/><button id="IK_W"/><button id="IK_Space"overridableUI="selectUpSecondary"/><button id="IK_Pad_A_CROSS"/><button id="IK_Pad_DigitUp"/></mapping><!-- Issue reporting - we need to have it here as we want the tool to also work in final configuration. --><buttonGroup id="ReportIssue_ButtonGroup"><button id="IK_Alt"/><button id="IK_F5"/></buttonGroup><mapping name="ReportIssue_Button"type="Button"><button id="ReportIssue_ButtonGroup"/></mapping><!-- AXIS PAIRS --><pairedAxes name="LeftStick"xAxisMapping="LeftX_Axis"yAxisMapping="LeftY_Axis"deadzonePreset="Preset_1"/><pairedAxes name="RightStick"xAxisMapping="RightX_Axis"yAxisMapping="RightY_Axis"deadzonePreset="Preset_2"/><pairedAxes name="LeftStick_Vehicle"xAxisMapping="LeftX_Axis_Vehicle"yAxisMapping="LeftY_Axis_Vehicle"deadzonePreset="Preset_Vehicle"/><pairedAxes name="RightStickUI"xAxisMapping="right_stick_x"yAxisMapping="right_stick_y"deadzonePreset="Preset_2"/><!-- PRESETS --><!-- sensitivity range: 1.0 - 100.0 --><preset name="invertRelative"invertRealAxis="false"invertFakeAxis="false"invertRelative="true"/><preset name="relative"invertRealAxis="false"invertFakeAxis="false"invertRelative="false"/><preset name="invertRealAxis"invertRealAxis="true"invertFakeAxis="false"invertRelative="false"/><preset name="invertFakeAxis"invertRealAxis="false"invertFakeAxis="true"invertRelative="false"/><preset name="invertAxis"invertRealAxis="tr)") +
				std::string(R"(ue"invertFakeAxis="true"invertRelative="false"/>)");

		}

		inline std::string GetBaseIC() {
			// Generated by makestringmc.exe
			return  std::string(R"(<?xml version="1.0"?><bindings><blend from="__ANY__"to="__ANY__"event="BUTTON_RELEASE_IF_TO_DOESNT_CONTAIN"/><blend from="__ANY__"to="UI_QuickHackPanel"event="BUTTON_RELEASE_IF_TO_DOESNT_CONTAIN"/><blend from="__ANY__"to="UI"event="AXIS_RESET_TO_ZERO"/><blend from="__ANY__"to="UI"event="BUTTON_RELEASE_IF_TO_DOESNT_CONTAIN"/><blend from="__ANY__"to="RELEASE_ALL"event="AXIS_RESET_TO_ZERO_NO_WAIT"/><blend from="__ANY__"to="RELEASE_ALL"event="BUTTON_RELEASE_IF_TO_DOESNT_CONTAIN"/><blend from="__ANY__"to="ChatBox"event="AXIS_RESET_TO_ZERO"/><blend from="__ANY__"to="ChatBox"event="BUTTON_RELEASE_IF_TO_DOESNT_CONTAIN"/><blend from="__ANY__"to="UI_Phone"event="AXIS_RESET_TO_ZERO"/><blend from="__ANY__"to="UI_Phone"event="BUTTON_RELEASE_IF_TO_DOESNT_CONTAIN"/><blend from="__ANY__"to="UI_DPad_Wheel"event="AXIS_RESET_TO_ZERO_NO_WAIT"/><blend from="__ANY__"to="UI_DPad_Wheel"event="BUTTON_RELEASE_IF_TO_DOESNT_CONTAIN"/><blend from="__ANY__"to="VehicleDrive"event="AXIS_RESET_TO_ZERO_NO_WAIT"/><blend from="__ANY__"to="VehicleDrive"event="BUTTON_RELEASE_IF_TO_DOESNT_CONTAIN"/><blend from="Exploration"to="VehicleDrive"event="AXIS_RESET_TO_ZERO_NO_WAIT"/><blend from="Exploration"to="VehicleDrive"event="BUTTON_RELEASE_IF_TO_DOESNT_CONTAIN"/><blend from="Exploration"to="VehiclePassenger"event="AXIS_RESET_TO_ZERO_NO_WAIT"/><blend from="Exploration"to="VehiclePassenger"event="BUTTON_RELEASE_IF_TO_DOESNT_CONTAIN"/><blend from="Exploration"to="VehicleTankDrive"event="AXIS_RESET_TO_ZERO_NO_WAIT"/><blend from="Exploration"to="VehicleTankDrive"event="BUTTON_RELEASE_IF_TO_DOESNT_CONTAIN"/><blend from="VehicleDrive"to="Exploration"event="AXIS_RESET_TO_ZERO_NO_WAIT"/><blend from="VehicleDrive"to="Exploration"event="BUTTON_RELEASE_IF_TO_DOESNT_CONTAIN"/><blend from="VehiclePassenger"to="Exploration"event="AXIS_RESET_TO_ZERO_NO_WAIT"/><blend from="VehiclePassenger"to="Exploration"event="BUTTON_RELEASE_IF_TO_DOESNT_CONTAIN"/><blend from="VehicleTankDrive"to="Exploration"event="AXIS_RESET_TO_ZERO_)") +
				std::string(R"(NO_WAIT"/><blend from="VehicleTankDrive"to="Exploration"event="BUTTON_RELEASE_IF_TO_DOESNT_CONTAIN"/><blend from="__ANY__"to="LadderEnter"event="AXIS_RESET_TO_ZERO_NO_WAIT"/><blend from="__ANY__"to="LadderEnter"event="BUTTON_RELEASE_IF_TO_DOESNT_CONTAIN"/><blend from="InputBlocked"to="Exploration"event="AXIS_RESET_TO_ZERO_NO_WAIT"/><blend from="Exploration"to="InputBlocked"event="AXIS_RESET_TO_ZERO_NO_WAIT"/><context name="Exploration"><include name="Camera"/><include name="Locomotion"/><include name="UIExploration"/><include name="Items"/><include name="Combat"/><include name="Abilities"/><include name="VisionActions"/><include name="PhotoMode"/><include name="QuickLoadAndSave"/></context><context name="Aiming"><include name="Exploration"/><exclude name="UI_DPad"/><exclude name="KeyboardExclusiveWeaponSwitching"/><action name="TagButton"map="Tag_Button"/><action name="ZoomIn"map="ZoomIn_Button"/><action name="ZoomOut"map="ZoomOut_Button"/></context><context name="Vision"><include name="Aiming"/><exclude name="UI_DPad"/><exclude name="Abilities"/><exclude name="KeyboardExclusiveWeaponSwitching"/><action name ="OpenQuickHackPanel"map="OpenQuickHackPanel_Button"/></context><context name="Braindance"><include name="Camera"/><include name="MovementActions"/><include name="PhotoMode"/><include name="QuickLoadAndSave"/><action name="Pause"map="BraindancePause_Button"/><action name="PlayForward"map="BraindancePlayForward_Button"/><action name="PlayBackward"map="BraindancePlayBackward_Button"/><action name="Restart"map="BraindanceRestart_Button"/><action name="SwitchLayer"map="BraindanceSwitchLayer_Button"/><action name="BdCameraToggle"map="BraindanceCameraToggle_Button"/><action name="ExitBraindance"map="ExitBraindance_Button"/><action name="ZoomIn"map="ZoomIn_Button"/><action name="ZoomOut"map="ZoomOut_Button"/><action name="ChoiceApply"map="DialogConfirm"priority="-2"/><action name="ChoiceScrollUp"map="UI_MoveUp"priority="-1"/><action name="ChoiceScrollDown"map="UI_Mov)") +
				std::string(R"(eDown"priority="-1"/></context><context name="DeviceControl"><include name="Camera"/><include name="VisionActions"/><action name ="OpenQuickHackPanel"map="OpenQuickHackPanel_Button"/><action name="DeviceAttack"map="RangedAttack_Button"/><action name="SwitchDeviceNext"map="CycleNext_Button"/><action name="SwitchDevicePrevious"map="CyclePrev_Button"/><action name="StopDeviceControl"map="StopDeviceControl_Button"/><action name="SceneFastForward"map="SceneFastForward_Button"/><action name="ZoomIn"map="ZoomIn_Button"/><action name="ZoomOut"map="ZoomOut_Button"/><action name="RangedADS"map="RangedADS_Button"/><action name="TagButton"map="Tag_Button"/><action name="ChoiceScrollUp"map="UI_MoveUp"priority="-1"/><action name="ChoiceScrollDown"map="UI_MoveDown"priority="-1"/><action name="ChoiceApply"map="DialogConfirm"priority="-2"/></context><context name="Dead"><include name="CameraMovement"/><action name="OpenChatBox"map="OpenChatBox_Button"/></context><context name="LadderEnter"><include name="Locomotion"/></context><context name="PhotoModeUI"><action name="TakeScreenshot"map="PhotoModeTakeScreenshot"/><action name="TakeScreenshot_HiRes"map="PhotoModeTakeScreenshot_HiRes"/><action name="TakeScreenshot_HiRes_Stadia"map="PhotoModeTakeScreenshot_HiRes_Stadia"/><action name="ExitPhotoMode"map="ExitPhotoModeButton"priority="-1"/><action name="PhotoMode_ShowHideUI"map="PhotoMode_ShowHideUI"priority="-1"/><action name="PhotoMode_CraneUp"map="PhotoMode_CraneUp_Axis"/><action name="PhotoMode_CraneDown"map="PhotoMode_CraneDown_Axis"/><action name="PhotoMode_CameraMovementX"map="LeftX_Axis"priority="-1"/><action name="PhotoMode_CameraMovementY"map="LeftY_Axis"priority="-1"/><action name="PhotoMode_CameraRotationX"map="right_stick_x"priority="-1"/><action name="PhotoMode_CameraRotationY"map="right_stick_y"priority="-1"/><action name="mouse_x"map="MouseX"priority="-1"/><action name="mouse_y"map="MouseY"priority="-1"/><action name="PhotoMode_CameraMouseWheel"map="MouseWheel")") +
				std::string(R"( priority="-1"/><action name="PhotoMode_CameraMouseZoom"map="PhotoMode_MouseZoom"priority="-1"/><action name="PhotoMode_CameraMouseRotation"map="PhotoMode_MouseRotation"priority="-1"/><action name="PhotoMode_CameraMouseMove"map="PhotoMode_MouseMove"priority="-1"/><action name="PhotoMode_Left_Button"map="left_button"priority="-1"/><action name="PhotoMode_Right_Button"map="right_button"priority="-1"/><action name="up_button"map="up_button"priority="-1"/><action name="down_button"map="down_button"priority="-1"/><action name="PhotoMode_Next_Menu"map="PhotoMode_Next_Menu"priority="-1"/><action name="PhotoMode_Prior_Menu"map="PhotoMode_Prior_Menu"priority="-1"/><action name="click"map="PhotoMode_Click"priority="-1"/><action name="PhotoMode_ScrollUp"map="MouseWheelUp"priority="-1"/><action name="PhotoMode_ScrollDown"map="MouseWheelDown"priority="-1"/><action name="PhotoMode_SaveSettings"map="PhotoMode_SaveSettings"priority="-1"/><action name="PhotoMode_LoadSettings"map="PhotoMode_LoadSettings"priority="-1"/><action name="debug_preset"map="Keyboard_1"priority="-1"/></context><!-- UI_DPAD_WHEEL - used when radial menu is present on the screen --><context name="UI_DPad_Wheel"><include name="UI_DPad"/><include name="UINotifications"/><action name="UI_MoveX_Axis"map="UI_MoveX_Axis"priority="-1"/><action name="UI_MoveY_Axis"map="UI_MoveY_Axis"priority="-1"/><action name="UI_LookX_Axis"map="UI_LookX_Axis"priority="-1"/><action name="UI_LookY_Axis"map="UI_LookY_Axis"priority="-1"/><action name="UI_Apply"map="Apply_Button"priority="-1"/><action name="CloseWheel"map="ExitWheel_Button"priority="-1"/><action name="UI_PreviousAbility"map="PrevItem_Button"priority="-1"/><action name="UI_NextAbility"map="NextItem_Button"priority="-1"/><action name="CameraAim"map="Hit2_Button"/><action name="ExitWheel"map="ExitWheel_Button"/><action name="SelectWheelItem"map="SelectWheelItem_Button"/></context><!-- STOREKEEPER - used while navigating menu in store --><context name="UI_Storekeeper"><)") +
				std::string(R"(action name="UI_Store_DPadLeft"map="UI_DPadLeft"priority="-1"/><action name="UI_Store_DPadRight"map="UI_DPadRight"priority="-1"/><action name="UI_Store_DPadUp"map="UI_DPadUp"priority="-1"/><action name="UI_Store_DPadDown"map="UI_DPadDown"priority="-1"/><action name="UI_Apply"map="Apply_Button"priority="-1"/><action name="UI_Cancel"map="Cancel_Button"priority="-1"/><action name="UI_A_Cross"map="UI_A_Cross"priority="-1"/><action name="UI_Y_Triangle"map="UI_Y_Triangle"priority="-1"/><action name="UI_MoveX_Axis"map="UI_MoveX_Axis"priority="-1"/><action name="UI_MoveY_Axis"map="UI_MoveY_Axis"priority="-1"/></context><!-- QUICKHACKPANEL - used while quick hacking screen is active --><context name="UI_QuickHackPanel"><include name="VisionActions"/><include name="CameraMovement"/><include name="Locomotion"/><action name="UI_MoveX_Axis"map="UI_MoveX_Axis"priority="-1"/><action name="UI_MoveY_Axis"map="LeftY_Axis"priority="-1"/><action name="UI_LookX_Axis"map="RightX_Axis"priority="-1"/><action name="UI_LookY_Axis"map="RightY_Axis"priority="-1"/><action name="UI_MoveUp"map="UI_MoveUp"priority="-1"/><action name="UI_MoveDown"map="UI_MoveDown"priority="-1"/><action name="QH_MoveLeft"map="CyclePrev_Button"priority="-1"/><action name="QH_MoveRight"map="CycleNext_Button"priority="-1"/><action name="UI_Apply"map="ApplyQHack"priority="-1"/><action name="UI_ApplyAndClose"map="ApplyAndCloseQHackWidget"priority="-1"/><action name="TagButton"map="Tag_Button"/><!-- HACK FOR VS --><action name="context_help"map="UI_ContextHelp"priority="-1"/><action name="CameraAim"map="Hit2_Button"priority="-1"/></context><context name="UI_Phone"><include name="UINotifications"/><action name="UI_MoveUp"map="UI_MoveUp"priority="-1"/><action name="UI_MoveDown"map="UI_MoveDown"priority="-1"/><action name="UI_MoveLeft"map="UI_MoveLeft"priority="-1"/><action name="UI_MoveRight"map="UI_MoveRight"priority="-1"/><action name="UI_Apply"map="Apply_Button"priority="-1"/><action name=)") +
				std::string(R"("UI_Cancel"map="Cancel_Button"priority="-1"/></context><context name="VehiclePassenger"><include name="CameraMovement"/><include name="VisionActions"/><include name="UIExploration"/><include name="PhotoMode"/><include name="QuickLoadAndSave"/><include name="Items"/><include name="QuestPauseActions"/><action name="UseConsumable"map="UseConsumable_Button"/><action name="Exit"map="ExitVehicle_Button"/><action name="TagButton"map="Tag_Button"/><!-- HACK FOR VS --><action name="ToggleVehCamera"map="VehicleCameraToggle"/><action name="VehicleCameraInverse"map="VehicleCameraInverse_Button"/><action name="ZoomIn"map="ZoomIn_Button"/><action name="ZoomOut"map="ZoomOut_Button"/><action name="CameraAim"map="Hit2_Button"/><action name="Zoom"map="MouseWheel"/></context><context name="VehicleOnlyForward"><include name="CameraMovement"/><include name="VisionActions"/><include name="UIExploration"/><include name="PhotoMode"/><include name="QuickLoadAndSave"/><include name="Items"/><include name="VehicleAuxillary"/><action name="Exit"map="ExitVehicle_Button"/><action name="Accelerate"map="Acceleration_Axis"/><action name="UseConsumable"map="UseConsumable_Button"/><action name="TagButton"map="Tag_Button"/><action name="ToggleVehCamera"map="VehicleCameraToggle"/><action name="VehicleCameraInverse"map="VehicleCameraInverse_Button"/><action name="ZoomIn"map="ZoomIn_Button"/><action name="ZoomOut"map="ZoomOut_Button"/></context><context name="VehicleNoDrive"><include name="CameraMovement"/><include name="VisionActions"/><include name="UIExploration"/><include name="PhotoMode"/><include name="QuickLoadAndSave"/><include name="Items"/><include name="VehicleAuxillary"/><action name="TurnX"map="LeftX_Axis_Vehicle"/><action name="Exit"map="ExitVehicle_Button"/><action name="UseConsumable"map="UseConsumable_Button"/><action name="TagButton"map="Tag_Button"/><action name="ToggleVehCamera"map="VehicleCameraToggle"/><action name="VehicleCameraInverse"map="VehicleCameraInverse_Button"/><action name)") +
				std::string(R"(="ZoomIn"map="ZoomIn_Button"/><action name="ZoomOut"map="ZoomOut_Button"/></context><context name="VehicleNoDriveCombat"><include name="CameraMovement"/><include name="VisionActions"/><include name="UIExploration"/><include name="PhotoMode"/><include name="QuickLoadAndSave"/><include name="Items"/><action name="UseConsumable"map="UseConsumable_Button"/><action name="TurnX"map="LeftX_Axis_Vehicle"/><action name="Exit"map="ExitVehicle_Button"/><action name="CycleLights"map="Vehicle_CycleLights"/><action name="RangedAttack"map="VehicleDriverCombatRangedAttack_Button"/><action name="Reload"map="Reload_Button"/><action name="ZoomIn"map="ZoomIn_Button"/><action name="ZoomOut"map="ZoomOut_Button"/></context><context name="VehicleDrive"><include name="CameraMovement"/><include name="VisionActions"/><include name="UIExploration"/><include name="PhotoMode"/><include name="QuickLoadAndSave"/><include name="Items"/><include name="VehicleAuxillary"/><action name="UseConsumable"map="UseConsumable_Button"/><action name="Accelerate"map="Acceleration_Axis"/><action name="Decelerate"map="Deceleration_Axis"/><action name="TurnX"map="LeftX_Axis_Vehicle"/><action name="LeanFB"map="LeftY_Axis_Vehicle"/><action name="RockFB"map="LeftY_Axis_Vehicle_RockFB"/><action name="ToggleVehCamera"map="VehicleCameraToggle"/><action name="VehicleCameraInverse"map="VehicleCameraInverse_Button"/><action name="Exit"map="ExitVehicle_Button"/><action name="CycleLights"map="Vehicle_CycleLights"/><action name="Handbrake"map="Vehicle_Handbrake"/><action name="ZoomIn"map="ZoomIn_Button"/><action name="ZoomOut"map="ZoomOut_Button"/></context><context name="VehicleTankDrive"><include name="CameraMovement"/><include name="VisionActions"/><include name="UIExploration"/><include name="PhotoMode"/><include name="QuickLoadAndSave"/><include name="Items"/><include name="VehicleAuxillary"/><action name="UseConsumable"map="UseConsumable_Button"/><action name="Accelerate"map="Acceleration_Axis_Tank"/><action name=")") +
				std::string(R"(TurnX"map="LeftX_Axis_Vehicle"/><action name="ToggleVehCamera"map="VehicleCameraToggle"/><action name="VehicleCameraInverse"map="VehicleCameraInverse_Button"/><action name="Exit"map="ExitVehicle_Button"/><action name="ShootPrimary"map="Vehicle_Shoot_Primary"/><action name="ShootSecondary"map="Vehicle_Shoot_Secondary"/><action name="ShootTertiary"map="Vehicle_Shoot_Tertiary"/><action name="ZoomIn"map="ZoomIn_Button"/><action name="ZoomOut"map="ZoomOut_Button"/></context><context name="VehicleDriverCombat"><include name="CameraMovement"/><include name="VisionActions"/><include name="UIExploration"/><include name="PhotoMode"/><include name="QuickLoadAndSave"/><include name="Items"/><action name="UseConsumable"map="UseConsumable_Button"/><action name="Accelerate"map="Acceleration_Axis"/><action name="Decelerate"map="Deceleration_Axis"/><action name="TurnX"map="LeftX_Axis_Vehicle"/><action name="LeanFB"map="LeftY_Axis_Vehicle"/><action name="RockFB"map="LeftY_Axis_Vehicle_RockFB"/><action name="Exit"map="ExitVehicle_Button"/><action name="Handbrake"map="Vehicle_Handbrake"/><action name="RangedAttack"map="VehicleDriverCombatRangedAttack_Button"/><action name="Reload"map="Reload_Button"/><action name="ZoomIn"map="ZoomIn_Button"/><action name="ZoomOut"map="ZoomOut_Button"/><action name="ToggleVehCamera"map="VehicleCameraToggle"/></context><context name="VehicleCombat"><include name="Camera"/><include name="Items"/><include name="UIExploration"/><include name="Abilities"/><include name="VisionActions"/><include name="Combat"/><include name="PhotoMode"/><include name="QuickLoadAndSave"/><action name="UseConsumable"map="UseConsumable_Button"/><action name="Exit"map="ExitVehicle_Button"/><action name="StrafeX"map="LeftX_Axis_Vehicle"/><action name="StrafeY"map="LeftY_Axis_Vehicle"/><action name="ZoomIn"map="ZoomIn_Button"/><action name="ZoomOut"map="ZoomOut_Button"/><action name="ToggleVehCamera"map="VehicleCameraToggle"/></context><context name="InputBlocked"><include nam)") +
				std::string(R"(e="VisionActions"/><include name="InteractionActions"/><action name="Exit"map="ExitVehicle_Button"/><action name="CameraAim"map="Hit2_Button"/><action name="back"map="back"priority="-1"/></context><context name="SettingsLocomotion"><include name="InteractionActions"/><include name="MovementActions"/><include name="Locomotion"/><include name="UI_DPad"/><include name="Items"/><include name="Combat"/><include name="Abilities"/><include name="DeviceControl"/><include name="UIToggles"/><include name="PhotoMode"/><action name="NotificationOpen"map="Notification_Button"priority="-1"/></context><context name="SettingsGeneral"><include name="QuickLoadAndSave"/><action name="ZoomIn"map="ZoomIn_Button"/><action name="ZoomOut"map="ZoomOut_Button"/><action name="TagButton"map="Tag_Button"/></context><context name="SettingsBraindance"><include name="Braindance"/></context><context name="SettingsVehicle"><include name="VehicleAuxillary"/><include name="InteractionActions"/><include name="CameraMovement"/><include name="VisionActions"/><include name="PhotoMode"/><include name="QuickLoadAndSave"/><include name="Items"/><include name="VehicleAuxillary"/><action name="UseConsumable"map="UseConsumable_Button"/><action name="Accelerate"map="Acceleration_Axis"/><action name="Decelerate"map="Deceleration_Axis"/><action name="TurnX"map="LeftX_Axis_Vehicle"/><action name="LeanFB"map="LeftY_Axis_Vehicle"/><action name="RockFB"map="LeftY_Axis_Vehicle_RockFB"/><action name="ToggleVehCamera"map="VehicleCameraToggle"/><action name="VehicleCameraInverse"map="VehicleCameraInverse_Button"/><action name="Exit"map="ExitVehicle_Button"/><action name="CycleLights"map="Vehicle_CycleLights"/><action name="Handbrake"map="Vehicle_Handbrake"/><action name="ZoomIn"map="ZoomIn_Button"/><action name="ZoomOut"map="ZoomOut_Button"/><action name="ShootPrimary"map="Vehicle_Shoot_Primary"/><action name="ShootSecondary"map="Vehicle_Shoot_Secondary"/><action name="ShootTertiary"map="Vehicle_Shoot_Tertiary"/></con)") +
				std::string(R"(text><context name="SettingsUI"><include name="UI_DPad_Wheel"/><include name="UI_QuickHackPanel"/><include name="UI_Phone"/><include name="UINotifications"/><include name="DeviceControl"/><include name="UIMenu"/><action name="DescriptionChange"map="ToggleQHackDescription"priority="-1"/></context><context name="UIExploration"><include name="UIShared"/><include name="InteractionActions"/><include name="UIPanels"/><include name="UI_DPad"/><include name="UI_Keyboard_Numbers"/><action name="click"map="device_click"priority="-1"/><action name="NotificationOpen"map="Notification_Button"priority="-1"/></context><context name="Camera"><include name="CameraMovement"/><action name="CameraAim"map="Hit2_Button"/></context><context name="CameraMovement"><action name="CameraX"map="RightX_Axis"priority="-99"/><action name="CameraY"map="RightY_Axis"priority="-99"/><action name="CameraMouseX"map="MouseX"/><action name="CameraMouseY"map="MouseY"/><action name="UI_FakeCamera"map="UI_FakeCamera"priority="-99"/></context><context name="PhotoMode"><action name="TogglePhotoMode"map="TogglePhotoModeButton"priority="-1"/></context><context name="QuickLoadAndSave"><action name="QuickSave"map="QuickSave_Button"/><action name="QuickLoad"map="QuickLoad_Button"/></context><context name="InteractionActions"><action name="Choice1"map="Choice1"priority="-1"/><action name="Choice1_Release"map="Choice1"priority ="-1"/><action name="Choice1_Hold"map="Choice1"priority="-2"/><action name="Choice2"map="Choice2"priority="-1"/><action name="Choice2_Release"map="Choice2"priority ="-1"/><action name="Choice2_Hold"map="Choice2"priority="-2"/><action name="Choice3"map="Choice3"priority="-1"/><action name="Choice4"map="Choice4"priority="-1"/><action name="ChoiceScrollUp"map="UI_MoveUp"priority="-1"/><action name="ChoiceScrollDown"map="UI_MoveDown"priority="-1"/><action name="ChoiceApply"map="DialogConfirm"priority="-2"/><!-- Priority -2 to not lose to ChoiceRight --><ac)") +
				std::string(R"(tion name="Choice_MoveY_Axis"map="UI_MoveY_Axis"priority="-1"/><action name="UI_Apply"map="Apply_Button"priority="-1"/><action name="UI_Cancel"map="Cancel_Button"priority="-1"/><action name="UI_Exit"map="Exit_Button"priority="-1"/><action name="PickUpBody"map="Choice2"priority="-2"/><action name="FastForward_Hold"map="FastForward_Hold_Button"/><action name="FastForward"map="FastForward_Button"/><action name="SceneFastForward"map="SceneFastForward_Button"/><action name="TagButton"map="Tag_Button"/><action name="CallVehicle"map="CallVehicle_Button"/></context><context name="UI_DPad"><action name="CallVehicle"map="CallVehicle_Button"/><action name="CycleObjectives"map="CycleObjectives_Button"/><action name="UI_DPadLeft"map="UI_DPadLeft"/><action name="UI_DPadRight"map="UI_DPadRight"/><action name="UI_DPadUp"map="UI_DPadUp"/><action name="UI_DPadDown"map="UI_DPadDown"/><action name="UI_DPadWeapons"map="UI_Y_Triangle"/><action name="UI_DialogFocus"map="UI_DialogFocus"/></context><context name="MovementActions"><action name="MoveX"map="LeftX_Axis"/><action name="MoveY"map="LeftY_Axis"/><action name="Forward"map="Forward_Button"/><action name="Right"map="Right_Button"/><action name="Back"map="Back_Button"/><action name="Left"map="Left_Button"/><action name="UI_FakeMovement"map="UI_FakeMovement"/><action name="QuestLeft"map="QuestLeft"/></context><context name="Locomotion"><include name="MovementActions"/><action name="Jump"map="Jump_Button"/><action name="Sprint"map="Sprint_Button"/><action name="ToggleSprint"map="ToggleSprint_Button"/><action name="ToggleWalk"map="ToggleWalk_Button"/><action name="Crouch"map="Crouch_Button"/><action name="ToggleCrouch"map="ToggleCrouch_Button"/><action name="Dodge"map="Dodge_Button"/><action name="DodgeForward"map="DodgeForward_Button"/><action name="DodgeRight"map="DodgeRight_Button"/><action name="DodgeBack"map="DodgeBack_Button"/><action name="DodgeLeft"map="DodgeLeft_Button"/></context><context name="Items"><inclu)") +
				std::string(R"(de name="KeyboardExclusiveWeaponSwitching"/><action name="SwitchItem"map="SwitchItem_Button"/><action name="WeaponWheel"map="WeaponWheel_Button"/><action name="CallVehicle"map="CallVehicle_Button"/></context><context name="KeyboardExclusiveWeaponSwitching"><action name="NextWeapon"map="NextWeapon_Button"/><action name="PreviousWeapon"map="PreviousWeapon_Button"/><action name="WeaponSlot1"map="WeaponSlot1_Button"/><action name="WeaponSlot2"map="WeaponSlot2_Button"/><action name="WeaponSlot3"map="WeaponSlot3_Button"/><action name="WeaponSlot4"map="WeaponSlot4_Button"/><action name="HolsterWeapon"map="HolsterWeapon_Button"/></context><context name="Combat"><action name="RangedAttack"map="RangedAttack_Button"/><action name="RangedADS"map="RangedADS_Button"/><action name="QuickMelee"map="QuickMelee_Button"/><action name="Reload"map="Reload_Button"/><action name="MeleeAttack"map="MeleeAttack_Button"/><action name="MeleeBlock"map="MeleeBlock_Button"/></context><context name="Abilities"><action name="IconicCyberware"map="IconicCyberware_Button"/><action name="CancelChargingCG"map="CancelCharging_Button"/><action name="UseCombatGadget"map="CombatGadget_Button"/><action name="UseConsumable"map="UseConsumable_Button"/><action name="DropCarriedObject"map="BodyDrop_Button"/><action name="PickUpBody"map="Choice2"priority="-1"/><action name="PickUpBodyFromTakedown"map="PickUpBodyFromTakedown_Button"/></context><context name="VisionActions"><action name="VisionToggle"map="Vision_Toggle_Button"/><action name="VisionHold"map="Vision_Hold_Button"/><action name="Ping"map="Vision_Hold_Button"/><action name="DescriptionChange"map="ToggleQHackDescription"priority="-1"/></context><context name="QuestPauseActions"><action name="QuestShoot"map="RangedAttack_Button"/></context><context name="VehicleAuxillary"><action name="VehicleHorn"map="Vehicle_Horn"/><action name="VehicleInsideWheel"map="VehicleInsideWheel_Button"/></context><context name="UI_Keyboard_Numbers"><action name="Keyboard_1"map="Keyboard)") +
				std::string(R"(_1"/><action name="Keyboard_2"map="Keyboard_2"/><action name="Keyboard_3"map="Keyboard_3"/><action name="Keyboard_4"map="Keyboard_4"/><action name="Keyboard_5"map="Keyboard_5"/><action name="Keyboard_6"map="Keyboard_6"/><action name="Keyboard_7"map="Keyboard_7"/><action name="Keyboard_8"map="Keyboard_8"/><action name="Keyboard_9"map="Keyboard_9"/><action name="Keyboard_0"map="Keyboard_0"/></context><transition action="ToggleMenu"><blend from="__ANY__"to="__ANY__"event="NONE"/></transition><transition action="NotificationOpen"><blend from="__ANY__"to="__ANY__"event="NONE"/></transition><context name="UIPanels"><action name="CharacterPanel"map="CharacterPanel_Button"/><action name="CycleTrackedQuestEntry"map="UI_CycleTrackedQuestEntry_Button"/><action name="OpenChatBox"map="OpenChatBox_Button"/></context><context name="ChatBox"><action name="EnterChat"map="EnterChat_Button"/><action name="UI_Cancel"map="UI_Esc_B_Circle"priority="-1"/></context><context name="UIBase"><include name="UIToggles"/></context><context name="UIZoomDevice"><include name="UIMenuShared"/><include name="UIToggles"/><action name="click"map="device_click"priority="-1"/><action name="UI_MoveCursorVertically"map="UI_MoveCursorVertically"priority="-1"/><action name="UI_MoveCursorHorizontally"map="UI_MoveCursorHorizontally"priority="-1"/><action name="UI_ScrollVertically"map="UI_ScrollVertically"priority="-1"/></context><context name="UIToggles"><action name="OpenHubMenu"map="OpenHubMenu_Button"priority="-2"/><action name="OpenPauseMenu"map="OpenPauseMenu_Button"priority="-2"/><action name="PhoneInteract"map="PhoneInteract_Button"/><action name="PhoneReject"map="PhoneReject_Button"/><action name="OpenMapMenu"map="OpenMapMenu_Button"/><action name="OpenCraftingMenu"map="OpenCraftingMenu_Button"/><action name="OpenJournalMenu"map="OpenJournalMenu_Button"/><action name="OpenPerksMenu"map="OpenPerksMenu_Button"/><action name="OpenInventoryMenu"map="OpenInventoryMenu_Button"/></context><context name="UI)") +
				std::string(R"("><action name="UI_LookX_Axis"map="UI_LookX_Axis"priority="-1"/><action name="UI_LookY_Axis"map="UI_LookY_Axis"priority="-1"/><action name="UI_MoveX_Axis"map="UI_MoveX_Axis"priority="-1"/><action name="UI_MoveY_Axis"map="UI_MoveY_Axis"priority="-1"/><action name="UI_MoveUp"map="UI_MoveUp"priority="-1"/><action name="UI_MoveDown"map="UI_MoveDown"priority="-1"/><action name="UI_MoveLeft"map="UI_MoveLeft"priority="-1"/><action name="UI_MoveRight"map="UI_MoveRight"priority="-1"/><action name="UI_Apply"map="Apply_Button"priority="-1"/><action name="UI_Cancel"map="Cancel_Button"priority="-1"/><action name="UI_Exit"map="Exit_Button"priority="-1"/><action name="UI_PrintDebug"map="UI_PrintDebug"priority="-1"/><action name="UI_Drop"map="UI_Drop"priority="-1"/><action name="UI_Unequip"map="UI_Unequip"priority="-1"/><action name="UI_Skip"map="skip_loading"priority="-1"/></context><context name="UIShared"><include name="UI"/><include name="UINotifications"/><action name="back"map="back"priority="-1"/><action name="change_account"map="change_account"priority="-1"/><action name="left_button"map="left_button"priority="-1"/><action name="up_button"map="up_button"priority="-1"/><action name="right_button"map="right_button"priority="-1"/><action name="down_button"map="down_button"priority="-1"/><action name="next_menu"map="next_menu"priority="-1"/><action name="prior_menu"map="prior_menu"priority="-1"/><action name="next_sub_menu"map="next_sub_menu"priority="-1"/><action name="prior_sub_menu"map="prior_sub_menu"priority="-1"/><action name="dpad_left"map="dpad_left"priority="-1"/><action name="dpad_up"map="dpad_up"priority="-1"/><action name="dpad_down"map="dpad_down"priority="-1"/><action name="dpad_right"map="dpad_right"priority="-1"/><action name="left_stick_x"map="left_stick_x"priority="-1"/><action name="left_stick_y"map="left_stick_y"priority="-1"/><action name="right_stick_x"map="right_stick_x"priority="-1"/><action name="right_stick_y"map="right_stick_y"priori)") +
				std::string(R"(ty="-1"/><action name="mouse_wheel"map="MouseWheel"priority="-1"/><action name="left_trigger"map="left_trigger"priority="-1"/><action name="right_trigger"map="right_trigger"priority="-1"/><action name="vendor_checkout"map="vendor_checkout"priority="-1"/><action name="pause_menu_quicksave"map="pause_menu_quicksave"priority="-1"/><action name="restore_default_settings"map="restore_default_settings"priority="-1"/><action name="world_map_fake_move"map="world_map_fake_move"priority="-99"/><action name="world_map_fake_rotate"map="world_map_fake_rotate"priority="-99"/><action name="world_map_menu_move_horizontal"map="LeftX_Axis"priority="-1"/><action name="world_map_menu_move_vertical"map="LeftY_Axis"priority="-1"/><action name="world_map_menu_move_horizontal_alt"map="RightX_Axis"priority="-1"/><action name="world_map_menu_move_vertical_alt"map="RightY_Axis"priority="-1"/><action name="world_map_menu_move_mouse"map="world_map_menu_pan_mouse"priority="-1"/><action name="world_map_menu_rotate_yaw"map="FreeCam_RightX_Axis"priority="-1"/><action name="world_map_menu_rotate_pitch"map="FreeCam_RightY_Axis"priority="-1"/><action name="world_map_menu_rotate_mouse"map="world_map_menu_rotate_mouse"priority="-1"/><action name="world_map_menu_zoom_in"map="world_map_menu_zoom_in"priority="-1"/><action name="world_map_menu_zoom_out"map="world_map_menu_zoom_out"priority="-1"/><action name="world_map_menu_zoom_in_mouse"map="world_map_menu_zoom_in_mouse"priority="-1"/><action name="world_map_menu_zoom_out_mouse"map="world_map_menu_zoom_out_mouse"priority="-1"/><action name="world_map_menu_jump_to_player"map="world_map_menu_jump_to_player"priority="-1"/><action name="world_map_menu_toggle_custom_filter"map="world_map_menu_toggle_custom_filter"priority="-1"/><action name="world_map_filter_navigation_up"map="world_map_filter_navigation_up"priority="-1"/><action name="world_map_filter_navigation_down"map="world_map_filter_navigation_down"priority="-1"/><action name="world_map_menu_cycle_filter_prev"map="world_map_m)") +
				std::string(R"(enu_cycle_filter_prev"priority="-1"/><action name="world_map_menu_cycle_filter_next"map="world_map_menu_cycle_filter_next"priority="-1"/><action name="world_map_menu_fast_travel"map="world_map_menu_fast_travel"priority="-1"/><action name="world_map_menu_track_waypoint"map="world_map_menu_track_waypoint"priority="-1"/><action name="world_map_menu_open_quest_static"map="world_map_menu_open_quest_static"priority="-1"/><action name="world_map_menu_zoom_to_mappin"map="world_map_menu_zoom_to_mappin"priority="-1"/><action name="world_map_menu_open_quest"map="world_map_menu_open_quest"priority="-1"/><action name="world_map_menu_debug_teleport"map="world_map_menu_debug_teleport"priority="-1"/><action name="proceed"map="proceed_popup"priority="-1"/><action name="option_switch_next"map="option_switch_next"priority="-1"/><action name="option_switch_prev"map="option_switch_prev"priority="-1"/><action name="system_notification_confirm"map="system_notification_confirm"priority="-1"/><action name="option_switch_next_settings"map="option_switch_next_settings"priority="-1"/><action name="option_switch_prev_settings"map="option_switch_prev_settings"priority="-1"/><action name="navigate_up"map="up_button"priority="-1"/><action name="navigate_down"map="down_button"priority="-1"/><action name="navigate_left"map="left_button"priority="-1"/><action name="navigate_right"map="right_button"priority="-1"/><action name="brightness_settings"map="brightness_settings"priority="-1"/><action name="controller_settings"map="controller_settings"priority="-1"/><action name="run_benchmark"map="run_benchmark"priority="-1"/><action name="system_notification_confirm"map="system_notification_confirm"priority="-1"/><action name="character_preview_rotate"map="character_preview_rotate"priority="-1"/><action name="ReportIssue"map="ReportIssue_Button"priority="-1"/></context><context name="UIMenuShared"><include name="UIShared"/><action name="click"map="menu_click"priority="-1"/></context><context name)") +
				std::string(R"(="UIMenu"><include name="UIMenuShared"/><action name="activate"map="activate"priority="-1"/><action name="activate_secondary"map="activate_secondary"priority="-1"/><action name="track"map="track"priority="-1"/><action name="delete_save"map="delete_save"priority="-1"/><action name="transfer_save"map="transfer_save"priority="-1"/><action name="disassemble_item"map="disassemble_item"priority="-1"/><action name="craft_item"map="craft_item"priority="-1"/><action name="drop_item"map="drop_item"priority="-1"/><action name="equip_item"map="equip_item"priority="-1"/><action name="equip_visuals"map="equip_visuals"priority="-1"/><action name="unequip_item"map="unequip_item"priority="-1"/><action name="delete_wardrobe_set"map="delete_wardrobe_set"priority="-1"/><action name="preview_item"map="preview_item"priority="-1"/><action name="toggle_comparison_tooltip"map="toggle_comparison_tooltip"priority="-1"/><action name="sell_junk"map="sell_junk"priority="-1"/><action name="use_item"map="use_item"priority="-1"/><action name="select"map="select"priority="-1"/><action name="upgrade_attribute"map="upgrade_attribute"priority="-1"/><action name="upgrade_perk"map="upgrade_perk"priority="-1"/><action name="engagement_screen"map="engagement_screen"priority="-1"/><action name="toggle_menu"map="OpenHubMenu_Button"priority="-1"/><action name="pause_menu"map="TogglePauseMenu_Button"priority="-1"/><action name="toggle_map"map="OpenMapMenu_Button"priority="-1"/><action name="toggle_crafting"map="OpenCraftingMenu_Button"priority="-1"/><action name="toggle_journal"map="OpenJournalMenu_Button"priority="-1"/><action name="toggle_perks"map="OpenPerksMenu_Button"priority="-1"/><action name="toggle_inventory"map="OpenInventoryMenu_Button"priority="-1"/><action name="reload"map="Reload_Button"priority="-1"/></context><context name="UIHackingMinigame"><action name="click"map="menu_click"priority="-1"/><action name="UI_MinigameFakeCamera"map="UI_MinigameFakeCamera"priority="-1"/></context><context name="UINot)") +
				std::string(R"(ifications"><action name="click"map="click_popup"priority="-1"/><action name="proceed"map="proceed_popup"priority="-1"/><action name="one_click_confirm"map="DialogConfirm"priority="-1"/><action name="cancel"map="cancel_popup"priority="-1"/><action name="popup_goto"map="popup_goto"priority="-1"/><action name="popup_goto_messenger"map="popup_goto_messenger"priority="-1"/><action name="popup_moveUp"map="UI_MoveUp"priority="-1"/><action name="popup_moveDown"map="UI_MoveDown"priority="-1"/><action name="popup_moveLeft"map="UI_MoveLeft"priority="-1"/><action name="popup_moveRight"map="UI_MoveRight"priority="-1"/><action name="popup_axisX"map="UI_LookX_Axis"priority="-1"/><action name="popup_axisY"map="UI_LookY_Axis"priority="-1"/><action name="popup_axisX_right"map="UI_MoveX_Axis"priority="-1"/><action name="popup_axisY_right"map="UI_MoveY_Axis"priority="-1"/><action name="track_quest"map="track_quest"priority="-1"/><action name="right_stick_x"map="right_stick_x"priority="-1"/><action name="right_stick_y"map="right_stick_y"priority="-1"/><action name="right_stick_y_scroll"map="right_stick_y_scroll"priority="-1"/><action name="left_stick_y_scroll_up"map="left_stick_y_scroll_up"priority="-1"/><action name="left_stick_y_scroll_down"map="left_stick_y_scroll_down"priority="-1"/><action name="up_button"map="up_button"priority="-1"/><action name="down_button"map="down_button"priority="-1"/><action name="left_button"map="left_button"priority="-1"/><action name="right_button"map="right_button"priority="-1"/><action name="mouse_x"map="MouseX"priority="-1"/><action name="mouse_y"map="MouseY"priority="-1"/><action name="mouse_wheel"map="MouseWheel"priority="-1"/><action name="mouse_left"map="MouseLeft"priority="-1"/><action name="context_help"map="UI_ContextHelp"priority="-1"/><action name="close_tutorial"map="close_tutorial"priority="-1"/><action name="system_notification_confirm"map="system_notification_confirm"priority="-1"/><action name="popup_maxQuantity"map=")") +
				std::string(R"(popup_maxQuantity"priority="-1"/><action name="popup_halveQuantity"map="popup_halveQuantity"priority="-1"/><action name="option_switch_next"map="option_switch_next"priority="-1"/><action name="option_switch_prev"map="option_switch_prev"priority="-1"/><action name="character_preview_rotate"map="character_preview_rotate"priority="-1"/><action name="left_trigger"map="left_trigger"priority="-1"/><action name="right_trigger"map="right_trigger"priority="-1"/></context><!-- UI - ARCADE MINIGAMES --><context name="UIArcadeMinigames"><action name="menu_up"map="minigame_menu_up"priority="-1"/><action name="menu_down"map="minigame_menu_down"priority="-1"/><action name="minigame_select"map="minigame_select"priority="-1"/><action name="minigame_back"map="minigame_back"priority="-1"/><action name="minigame_pause"map="minigame_pause"priority="-1"/></context><context name="UIRoachRaceMinigame"><include name="UIArcadeMinigames"/><action name="roach_jump"map="roach_race_jump"priority="-1"/></context><context name="RELEASE_ALL"></context><hold action="Jump"timeout="0.15"/><hold action="Exit"timeout="0.3"/><hold action="SceneFastForward"timeout="0.3"/><hold action="EnableFreeCamera"timeout="1.0"/><hold action="Choice1_Hold"timeout="0.3"/><hold action="Choice2_Hold"timeout="0.3"/><hold action="UseConsumable"timeout="0.2"/><hold action="PickUpBody"timeout="0.3"/><hold action="PickUpBodyFromTakedown"timeout="0.1"/><hold action="DropCarriedObject"timeout="0.3"/><hold action="PhoneInteract"timeout="0.5"/><hold action="RangedAttack"timeout="0.3"/><hold action="ToggleCrouch"timeout="0.3"/><hold action="RangedADS"timeout="0.3"/><hold action="QuickMelee"timeout="0.2"/><hold action="MeleeAttack"timeout="0.15"/><hold action="MeleeLightAttack"timeout="0.3"/><hold action="MeleeStrongAttack"timeout="0.3"/><hold action="MeleeBlock"timeout="0.3"/><hold action="UseCombatGadget"timeout="0.3"/><hold action="UseCyberware"timeout="0.3"/><hold action="GadgetWheel"timeout="0.3"/><hold action="Consumab)") +
				std::string(R"(leWheel"timeout="0.3"/><hold action="CallVehicle"timeout="0.3"/><hold action="VehicleInsideWheel"timeout="0.3"/><hold action="WeaponWheel"timeout="0.3"/><hold action="VehicleHorn"timeout="0.25"/><hold action="IconicCyberware"timeout="0.2"/><hold action="NotificationOpen"timeout="0.5"/><hold action="VisionHold"timeout="0.1"/><hold action="Restart"timeout="0.3"/><hold action="OpenMapMenu"timeout="0.5"/><hold action="OpenCraftingMenu"timeout="0.5"/><hold action="OpenJournalMenu"timeout="0.5"/><hold action="OpenPerksMenu"timeout="0.5"/><hold action="OpenInventoryMenu"timeout="0.5"/><hold action="PhoneReject"timeout="0.5"/><hold action="left_button"timeout="0.5"/><hold action="up_button"timeout="0.5"/><hold action="right_button"timeout="0.5"/><hold action="down_button"timeout="0.5"/><hold action="dpad_left"timeout="0.5"/><hold action="dpad_up"timeout="0.5"/><hold action="dpad_down"timeout="0.5"/><hold action="dpad_right"timeout="0.5"/><hold action="right_stick_y_scroll"timeout="0.2"/><hold action="left_stick_y_scroll_up"timeout="0.1"/><hold action="left_stick_y_scroll_down"timeout="0.1"/><hold action="disassemble_item"timeout="0.4"/><hold action="craft_item"timeout="0.8"/><hold action="use_item"timeout="0.4"/><hold action="upgrade_attribute"timeout="0.4"/><hold action="upgrade_perk"timeout="0.4"/><hold action="PhotoMode_Left_Button"timeout="10.0"/><hold action="PhotoMode_Right_Button"timeout="10.0"/><hold action="PhotoMode_CameraMouseMove"timeout="10.0"/><hold action="PhotoMode_CameraMouseRotation"timeout="10.0"/><hold action="PhotoMode_SaveSettings"timeout="0.6"/><hold action="PhotoMode_LoadSettings"timeout="0.6"/><hold action="EmptyHands"timeout="0.2"/><!-- Prototype --><hold action="AlternativeWorkspotModeDebug"timeout="0.8"/><hold action="SendSlowExitSignalWorkspotDebug"timeout="0.5"/><hold action="UI_DPadLeft"timeout="0.25"/><hold action="UI_DPadRight"timeout="0.25"/><hold action="UI_DPadUp"timeout="0.25"/><hold action="UI_DPadDown"timeout="0.25"/><hold action="UI_DPad)") +
				std::string(R"(Weapons"timeout="0.25"/><hold action="world_map_menu_track_quest"timeout="0.5"/><hold action="world_map_menu_debug_teleport"timeout="0.6"/><hold action="world_map_menu_fast_travel"timeout="0.8"/><!-- REPEAT ACTIONS --><repeat action="popup_moveDown"delay="0.25"delta="0.05"/><repeat action="popup_moveUp"delay="0.25"delta="0.05"/><repeat action="popup_moveLeft"delay="0.25"delta="0.05"/><repeat action="popup_moveRight"delay="0.25"delta="0.05"/><repeat action="navigate_down"delay="0.2"delta="0.1"/><repeat action="navigate_up"delay="0.2"delta="0.1"/><repeat action="navigate_left"delay="0.2"delta="0.1"/><repeat action="navigate_right"delay="0.2"delta="0.1"/><repeat action="option_switch_next_settings"delay="0.2"delta="0.1"/><repeat action="option_switch_prev_settings"delay="0.2"delta="0.1"/><!-- Script only gives 0.25 seconds to read this so tighter tap requiremets --><multitap action="HolsterUnholster"count="2"uptime="0.125"downtime="0.125"/><!-- Prototype --><multitap action="UI_DPadLeft"count="2"uptime="0.17"downtime="0.17"/><multitap action="UI_DPadRight"count="2"uptime="0.17"downtime="0.17"/><multitap action="UI_DPadUp"count="2"uptime="0.17"downtime="0.17"/><multitap action="UI_DPadDown"count="2"uptime="0.17"downtime="0.17"/><!-- TOGGLE ACTIONS --><toggle action="Interaction"/><acceptedEvents action="upgrade_perk"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="PickUpBody"><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="Choice1"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="Choice2"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="Choice3"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="Choice4"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="Choice1_Hold"><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><ac)") +
				std::string(R"(ceptedEvents action="Choice2_Hold"><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="ToggleCrouch"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="SceneFastForward"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="VisionHold"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="ChoiceScrollUp"><event name="BUTTON_PRESSED"/></acceptedEvents><acceptedEvents action="ChoiceScrollDown"><event name="BUTTON_PRESSED"/></acceptedEvents><acceptedEvents action="ChoiceApply"><event name="BUTTON_PRESSED"/></acceptedEvents><acceptedEvents action="UI_Apply"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="UI_Cancel"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="UI_Exit"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="UI_DPadUp"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="UI_DPadDown"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="Restart"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="UI_DPadLeft"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="UI_DPadRight"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="UI_DPadWeapons"><event name="BUTTON_HOLD_COMPLETE"/><event name=)") +
				std::string(R"("BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="Keyboard_1"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="Keyboard_2"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="Keyboard_3"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="Keyboard_4"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="Keyboard_5"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="Keyboard_6"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="Keyboard_7"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="Keyboard_8"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="PhoneInteract"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="PhoneReject"><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="CallVehicle"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="IconicCyberware"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="RangedAttack"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="RangedADS"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action=")") +
				std::string(R"(QuickMelee"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="MeleeAttack"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="MeleeLightAttack"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="MeleeStrongAttack"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="MeleeBlock"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="UseCombatGadget"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="UseCyberware"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="GadgetWheel"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="ConsumableWheel"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="WeaponWheel"><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="click"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="back"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="change_account"><event name="BUTT)") +
				std::string(R"(ON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="left_button"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="up_button"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="right_button"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="down_button"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="next_menu"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="prior_menu"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="next_sub_menu"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="prior_sub_menu"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="dpad_left"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="dpad_up"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="dpad_down"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="NotificationOpen"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="dpad_right"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS)") +
				std::string(R"("/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="vendor_checkout"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="pause_menu_quicksave"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="restore_default_settings"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="world_map_menu_move_mouse"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="world_map_menu_rotate_mouse"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="world_map_menu_jump_to_player"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="world_map_menu_toggle_custom_filter"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="world_map_filter_navigation_up"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="world_map_filter_navigation_down"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="world_map_menu_cycle_filter_prev"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="world_map_menu_cycle_filter_next"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="world_map_menu_track_waypoint"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="world_map_menu_fast_travel"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="world_map_menu_open_quest"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="world_map_menu_zoom_to_mappin"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/></accepted)") +
				std::string(R"(Events><acceptedEvents action="world_map_menu_debug_teleport"><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="disassemble_item"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="craft_item"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="drop_item"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="equip_item"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="unequip_item"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="delete_wardrobe_set"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="preview_item"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="toggle_comparison_tooltip"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="use_item"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="upgrade_attribute"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="select"><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="PhotoMode_Left_Button"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/></acceptedEvents><acceptedEvents action="PhotoMode_Right_Button"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/></acceptedEvents><acceptedEvents action="PhotoMode_CameraMouseMove"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/></acceptedEvents><acceptedEvents action="Phot)") +
				std::string(R"(oMode_CameraMouseRotation"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/></acceptedEvents><acceptedEvents action="PhotoMode_SaveSettings"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="PhotoMode_LoadSettings"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="left_stick_y_scroll_up"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="left_stick_y_scroll_down"><event name="BUTTON_PRESSED"/><event name="BUTTON_RELEASED"/><event name="BUTTON_HOLD_PROGRESS"/><event name="BUTTON_HOLD_COMPLETE"/></acceptedEvents><acceptedEvents action="OpenMapMenu"><event name="BUTTON_PRESSED"/><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="OpenCraftingMenu"><event name="BUTTON_PRESSED"/><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="OpenJournalMenu"><event name="BUTTON_PRESSED"/><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="OpenPerksMenu"><event name="BUTTON_PRESSED"/><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_RELEASED"/></acceptedEvents><acceptedEvents action="OpenPerksMenu"><event name="BUTTON_PRESSED"/><event name="BUTTON_HOLD_COMPLETE"/><event name="BUTTON_RELEASED"/></acceptedEvents>)");

		}
	}

	
}